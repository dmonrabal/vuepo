{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Groups.vue?vue&type=style&index=0&id=6ac6e28e&scoped=true&lang=css&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Groups.vue","mtime":1642866132748},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucHJvamVjdGxpc3QgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBtYXJnaW46IDA7Cn0K"},{"version":3,"sources":["Groups.vue"],"names":[],"mappingseA;AACA;AACA;AACA;AACA;AACA","file":"Groups.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"mt-2\">\n    <Alert\n      :show=\"myAlert.enable\"\n      :type=\"myAlert.type\"\n      :text=\"myAlert.text\"\n    ></Alert>\n    <Loading :loading=\"cargando\"></Loading>\n    <Title\n      :title=\"'Grupos'\"\n      :color=\"'secondary--text'\"\n      :path=\"'Home / grupos'\"\n    ></Title>\n    <!-- <v-card class=\"pa-1 mb-5\" outlined tile>\n      <v-btn plain v-if=\"!displayGrid\" @click=\"displayGrid = true\">\n        <v-icon class=\"fas fa-th\" size=\"15\"> </v-icon>\n      </v-btn>\n      <v-btn plain v-if=\"displayGrid\" @click=\"displayGrid = false\">\n        <v-icon class=\"fas fa-table\" size=\"15\"> </v-icon>\n      </v-btn>\n    </v-card> -->\n    <v-card v-if=\"!displayGrid\" outlined tile>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"projects.groupsList\"\n        class=\"pa-5\"\n        :search=\"search\"\n        :custom-filter=\"filterOnlyCapsText\"\n      >\n        <template v-slot:top>\n          <v-text-field\n            v-model=\"search\"\n            label=\"Search (UPPER CASE ONLY)\"\n            class=\"mx-4\"\n          ></v-text-field>\n        </template>\n\n        <template v-slot:top>\n          <v-toolbar flat>\n            <!-- <v-toolbar-title>My CRUD</v-toolbar-title> -->\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\n            <v-spacer></v-spacer>\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  color=\"primary\"\n                  dark\n                  elevation=\"8\"\n                  fab\n                  class=\"mb-2\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  <v-icon>fas fa-plus</v-icon>\n                </v-btn>\n              </template>\n              <v-form v-model=\"isFormValid\">\n                <v-card>\n                  <v-card-title>\n                    <span class=\"text-h5\">{{ formTitle }}</span>\n                  </v-card-title>\n\n                  <v-card-text>\n                    <v-container>\n                      <v-row>\n                        <v-col cols=\"12\">\n                          <v-text-field\n                            v-model=\"editedItem.name\"\n                            label=\"Nombre\"\n                            :rules=\"rules.name\"\n                          ></v-text-field>\n                        </v-col>\n                      </v-row>\n                      <v-row>\n                        <v-col cols=\"12\" sm=\"6\" md=\"12\">\n                          <v-text-field\n                            v-model=\"editedItem.description\"\n                            label=\"Descripción\"\n                            :rules=\"rules.description\"\n                            :counter=true\n                          ></v-text-field>\n                        </v-col>\n                      </v-row>\n                      <v-row>\n                        <v-col cols=\"12\" sm=\"6\" md=\"12\">\n                          <v-text-field\n                            v-model=\"editedItem.code\"\n                            label=\"Etiqueta\"\n                            :rules=\"rules.code\"\n                            :counter=true\n                          ></v-text-field>\n                        </v-col>\n                      </v-row>\n                      <v-row>\n                        <v-col cols=\"12\" sm=\"6\" md=\"12\">\n                          <v-select\n                            :items=\"\n                              projects.projectList.map((p) => {\n                                return { text: p.name, value: p._id };\n                              })\n                            \"\n                            filled\n                            dense\n                            label=\"Filled style\"\n                            v-model=\"selectedProFrom\"\n                            :rules=\"rules.project\"\n                            v-if=\"viewComboProjects\"\n                          ></v-select>\n                          <v-text-field\n                            v-model=\"editedItem.project\"\n                            label=\"Proyecto\"\n                            disabled\n                            v-if=\"!viewComboProjects\"\n                          ></v-text-field>\n                        </v-col>\n                      </v-row>\n                    </v-container>\n                  </v-card-text>\n\n                  <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"blue darken-1\" text @click=\"close\">\n                      Cancel\n                    </v-btn>\n                    <v-btn color=\"blue darken-1\" text @click=\"save\" :disabled=\"!isFormValid\">\n                      Save\n                    </v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-form>\n            </v-dialog>\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n              <v-card>\n                <v-card-title class=\"text-h5\"\n                  >¿Estás seguro de eliminar este elemento?</v-card-title\n                >\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                    >Cancel</v-btn\n                  >\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                    >OK</v-btn\n                  >\n                  <v-spacer></v-spacer>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </v-toolbar>\n        </template>\n\n        <template v-slot:item.action=\"{ item }\">\n          <v-icon\n            small\n            class=\"mr-2\"\n            color=\"primary\"\n            @click=\"watchItem(item)\"\n            title=\"Consultar\"\n          >\n            fas fa-search\n          </v-icon>\n          <v-icon\n            small\n            class=\"mr-2\"\n            color=\"warning\"\n            @click=\"editItem(item)\"\n            title=\"Editar\"\n          >\n            fas fa-pencil-alt\n          </v-icon>\n          <v-icon\n            small\n            color=\"error\"\n            @click=\"deleteItem(item)\"\n            title=\"Eliminar\"\n          >\n            fas fa-trash\n          </v-icon>\n        </template>\n      </v-data-table>\n    </v-card>\n\n    <!-- <div\n      class=\"d-flex justify-space-around flex-wrap\"\n      v-for=\"project in projects.projectList\"\n      :key=\"project.id\"\n      v-if=\"displayGrid\"\n    >\n      <v-card\n        v-for=\"group in project.groups\"\n        :key=\"project.id\"\n        class=\"pa-3 text-center mb-2\"\n        width=\"380\"\n        height=\"380\"\n        hover\n        v-if=\"displayGrid\"\n        outlined\n        tile\n      >\n        <v-card-subtitle>\n          <span class=\"font-weight-bold text-h6\">{{ project.name }}</span>\n        </v-card-subtitle>\n        <v-card-text>\n          {{ group.name }} - {{ group.code }}\n          <p class=\"mt-2 font-italic\">{{ group.description }}</p>\n        </v-card-text>\n        <v-icon class=\"mb-2\" color=\"warning\" size=\"80\"\n          >fas fa-layer-group</v-icon\n        >\n        <v-card-text>\n          INFO NO REAL\n          <div class=\"d-flex justify-center align-center\">\n            <v-icon class=\"ml-6\" color=\"grey\" size=\"20\">fa-microchip</v-icon>\n            <span class=\"font-weight-bold text-h6 ml-2\">{{\n              project.stats.totalDevices\n            }}</span>\n            <div class=\"mr-2 text-h7\">dispositivos</div>\n            <v-icon color=\"grey\" size=\"20\">fas fa-temperature-high</v-icon>\n            <span class=\"font-weight-bold text-h6 ml-2\">{{\n              project.stats.totalSensors\n            }}</span>\n            <div class=\"ml-1 text-h7\">sensores</div>\n          </div>\n        </v-card-text>\n\n        <router-link\n          :to=\"{ name: 'Project', params: { idProject: project._id } }\"\n          style=\"text-decoration: none; color: inherit\"\n        >\n          <v-btn\n            class=\"text-capitalize font-weight-light\"\n            color=\"warning\"\n            block\n            dark\n            @click=\"passProject(project)\"\n          >\n            Consulta\n          </v-btn>\n        </router-link>\n      </v-card>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport Loading from '@/components/Loading';\nimport Title from '@/components/Title';\nimport Alert from '@/components/Alert';\nimport utils from '@/plugins/utils';\n\nexport default {\n  name: 'Groups',\n  data() {\n    return {\n      cargando: false,\n      displayGrid: false,\n      search: '',\n\n      myAlert: {\n        enable: false,\n        type: 'success',\n        text: '',\n      },\n\n      // Form fields\n      dialog: false,\n      dialogDelete: false,\n      selectedProFrom: '',\n      editedIndex: -1,\n      editedItem: {\n        _id: '',\n        name: '',\n        description: '',\n        code: '',\n        project: '',\n        idProject: '',\n      },\n      defaultItem: {\n        _id: '',\n        name: '',\n        description: '',\n        code: '',\n        project: '',\n        idProject: '',\n      },\n\n      // Rules from\n      rules: {\n        name: [(v) => !!v || 'El campo es requerido'],\n        description: [\n          (v) => !!v || 'El campo es requerido',\n          (v) =>\n            (v && v.length >= 15 && v.length <= 30) ||\n            'La descripción debe tener entre 15 y 30 caracteres',\n        ],\n        code: [\n          (v) => !!v || 'El campo es requerido',\n          (v) =>\n            (v && v.length >= 3 && v.length <= 15) ||\n            'El códifo debe contener entre 3 y 15 caracteres',\n        ],\n        project: [(v) => !!v || 'El proyecto es requerido'],\n      },\n      isFormValid: false,\n    };\n  },\n  props: ['loading', 'title', 'path'],\n  components: {\n    Loading,\n    Title,\n    Alert,\n  },\n  computed: {\n    ...mapState(['projects', 'users']),\n\n    formTitle() {\n      return this.editedIndex === -1 ? 'Nuevo Grupo' : 'Editar Grupo';\n    },\n\n    viewComboProjects() {\n      if (this.editedIndex === -1) {\n        // Add a new element, show available projects\n        return true;\n      } else {\n        return false;\n      }\n    },\n    headers() {\n      return [\n        { text: 'Nombre', value: 'name', sortable: true },\n        { text: 'Descripción', value: 'description' },\n        { text: 'Etiqueta', value: 'code' },\n        { text: 'Proyecto', value: 'project' },\n        { text: 'Acciones', value: 'action', sortable: false },\n      ];\n    },\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  methods: {\n    ...mapActions(['getProjects', 'createGroup', 'updateGroup', 'deleteGroup']),\n\n    logInreadProjects() {\n      this.cargando = true;\n      this.$store.dispatch('projects/getProjects', this.users.user.token);\n      this.cargando = false;\n    },\n\n    passProject(project) {\n      this.$store.dispatch('projects/selectProject', project);\n    },\n\n    //Method used for search group fields\n    filterOnlyCapsText(value, search, item) {\n      return (\n        value != null &&\n        search != null &&\n        typeof value === 'string' &&\n        value.toString().toLocaleUpperCase().indexOf(search) !== -1\n      );\n    },\n\n    watchItem(item) {\n      console.log('Consultando item: ', item);\n    },\n\n    editItem(item) {\n      //console.log('Editando item: ', item);\n      this.editedIndex = this.projects.groupsList.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      //console.log('ITEM a eliminar: ', item);\n      this.editedIndex = this.projects.groupsList.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    async createItem(params) {\n      try {\n        const res = await this.$store.dispatch('projects/createGroup', params);\n        utils.alert(\n          this.myAlert,\n          'success',\n          utils.messages.GROUP_CREATE_SUCCESS\n        );\n      } catch (err) {\n        utils.alert(this.myAlert, 'error', utils.messages.GROUP_CREATE_ERROR);\n      }\n    },\n\n    async updateItem(params) {\n      try {\n        const res = await this.$store.dispatch('projects/updateGroup', params);\n        console.log('RESP updateItem: ', res.status);\n        utils.alert(\n          this.myAlert,\n          'success',\n          utils.messages.GROUP_UPDATE_SUCCESS\n        );\n      } catch (err) {\n        utils.alert(this.myAlert, 'error', utils.messages.GROUP_UPDATE_ERROR);\n      }\n    },\n\n    async removeItem(params) {\n      try {\n        const res = await this.$store.dispatch('projects/deleteGroup', params);\n        utils.alert(\n          this.myAlert,\n          'success',\n          utils.messages.GROUP_DELETE_SUCCESS\n        );\n      } catch (err) {\n        utils.alert(this.myAlert, 'error', utils.messages.GROUP_DELETE_ERROR);\n      }\n    },\n\n    deleteItemConfirm() {\n      this.cargando = true;\n      const params = [this.users.user.token];\n      params.push(this.editedItem.idProject);\n      params.push(this.editedItem._id);\n      this.removeItem(params);\n      this.closeDelete();\n      this.cargando = false;\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      // Calling updateProject\n      this.cargando = true;\n      const params = [this.users.user.token];\n      const body = {\n        name: this.editedItem.name,\n        description: this.editedItem.description,\n        code: this.editedItem.code,\n      };\n      params.push(body);\n      if (this.editedIndex === -1) {\n        // Create a new group\n        params.push(this.selectedProFrom);\n        this.createItem(params);\n      } else {\n        // Update a group\n        params.push(this.editedItem.idProject);\n        params.push(this.editedItem._id);\n        this.updateItem(params);\n      }\n\n      this.cargando = false;\n      this.close();\n    },\n\n    triggerAlert(type, message) {\n      this.typeAlert = type;\n      this.textAlert = message;\n      this.enableAlert = true;\n\n      setTimeout(() => {\n        this.enableAlert = false;\n      }, 5000);\n    },\n  },\n  created() {},\n};\n</script>\n\n<style scoped>\n.projectlist {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n}\n</style>\n"]}]}