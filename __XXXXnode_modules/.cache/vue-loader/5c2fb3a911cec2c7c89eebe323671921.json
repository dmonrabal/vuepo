{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Mapa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Mapa.vue","mtime":1654200446902},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUaXRsZSBmcm9tICdAL2NvbXBvbmVudHMvVGl0bGUnOwppbXBvcnQgTG9hZGluZyBmcm9tICdAL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CgppbXBvcnQgTWFwYm94IGZyb20gJ21hcGJveC1nbCc7CmltcG9ydCB7IE1nbE1hcCwgTWdsTWFya2VyLCBNZ2xQb3B1cCB9IGZyb20gJ3Z1ZS1tYXBib3gnOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjYXJnYW5kbzogZmFsc2UsCiAgICAgIGFjY2Vzc1Rva2VuOiBwcm9jZXNzLmVudi5WVUVfQVBQX01BUEJPWF9UT0tFTiwKICAgICAgbWFwU3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3NhdGVsbGl0ZS12OScsCiAgICAgIGNvb3JkaW5hdGVzOiBbMi45ODYyOTE4NzMzNzk2NDg2LCAzOS41NzM4MDY0MDMzNTI1N10sCiAgICAgIGRldkRldGFpbDogJycsCiAgICAgIGRldkxvYWRlZDogZmFsc2UsCgogICAgICBkZXZJbml0OiBbXSwKICAgICAgZGV2RmlsdHI6IFtdLAogICAgICBwcm9JdGVtczogW10sCiAgICAgIGdycEl0ZW1zOiBbXSwKICAgICAgZGV2SXRlbXM6IFtdLAogICAgICBzZW5JdGVtczogW10sCiAgICAgIGRhdEl0ZW1zOiBbXSwKICAgICAgZGF0ZVJlcTogW10sCgogICAgICBsYWJlbEdycDogJ0VsaWdlIHVuIGdydXBvJywKICAgICAgbGFiZWxEZXY6ICdFbGlnZSB1biBkaXNwb3NpdGl2bycsCgogICAgICBtZW51OiBmYWxzZSwKCiAgICAgIHByb1NlbDogJycsCiAgICAgIGdycFNlbDogJycsCiAgICAgIGRldlNlbDogJycsCiAgICAgIHNlblNlbDogJycsCgogICAgICBncnBEaXM6IHRydWUsCiAgICAgIGRldkRpczogdHJ1ZSwKICAgICAgYnRuRGlzOiB0cnVlLAoKICAgICAgc2hvd1RhYmxlOiBmYWxzZSwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBUaXRsZSwKICAgIExvYWRpbmcsCiAgICBNZ2xNYXAsCiAgICBNZ2xNYXJrZXIsCiAgICBNZ2xQb3B1cCwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ3Byb2plY3RzJywgJ2dyb3VwcycsICd1c2VycycsICdkZXZpY2VzJ10pLAogIH0sCiAgbWV0aG9kczogewogICAgZW5hYmxlRmlsdGVyKCkgewogICAgICB0aGlzLmJ0bkRpcyA9IGZhbHNlOwogICAgfSwKCiAgICAvKioKICAgICAqIFRoaXMgbWV0aG9kIGlzIHVzZWQgZm9yIGdldCBncm91cCBpbmZvIGluIGRldmljZXMgb2JqZWN0cy4KICAgICAqIEJ5IGRlZmF1bHQsIGVhY2ggZGV2aWNlIG9ubHkgY29udGFpbnMgX2lkIGdyb3VwIGZpZWxkLgogICAgICogSW4gb3JkZXIgdG8gcHJvdmlkZSB1cGRhdGUgYW5kIGNyZWF0ZSBmdW5jdGlvbnMsIGlzCiAgICAgKiBuZWNlc3NhcnkgZGlzcG9zZSB0aGlzIGluZm8gaW4gZm9ybXMuCiAgICAgKi8KICAgIHBvcHVsYXRlUHJvR3JwKCkgewogICAgICAvLyBHcm91cCB0cmVhdG1lbnQgR2V0IGlkR3JvdXAgYW5kIG5hbWUKICAgICAgY29uc3QgbGRldlBvcCA9IFtdOyAvLwoKICAgICAgdGhpcy5kZXZpY2VzLmRldmljZXNMaXN0LmZvckVhY2goKGRldikgPT4gewogICAgICAgIGNvbnN0IGlkUHJvID0gZGV2LnByb2plY3QuX2lkOwogICAgICAgIGNvbnN0IGlkR3JwID0gZGV2Lmdyb3VwOwogICAgICAgIGNvbnN0IHBybyA9IHRoaXMucHJvamVjdHMucHJvamVjdExpc3QuZmluZCgKICAgICAgICAgIChpdGVtKSA9PiBpdGVtLl9pZCA9PT0gaWRQcm8KICAgICAgICApOwogICAgICAgIGNvbnN0IGdycCA9IHByby5ncm91cHMuZmluZCgoaXRlbSkgPT4gaXRlbS5faWQgPT09IGlkR3JwKTsKICAgICAgICBpZiAoIXBybyB8fCAhZ3JwKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnTUFMTExMTEwgZ3J1cG8gbyBwcm95ZWN0byBubyBlbmNvbnRyYWRvISEhIScpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkZWxldGUgZGV2Lmdyb3VwOwogICAgICAgICAgbGV0IG5ncnAgPSB7CiAgICAgICAgICAgIF9pZDogZ3JwLl9pZCwKICAgICAgICAgICAgbmFtZTogZ3JwLm5hbWUsCiAgICAgICAgICAgIGNvZGU6IGdycC5jb2RlLAogICAgICAgICAgfTsKICAgICAgICAgIGRldi5ncm91cCA9IG5ncnA7CiAgICAgICAgfQogICAgICAgIGxkZXZQb3AucHVzaChkZXYpOwogICAgICAgIC8vY29uc29sZS5sb2coJ0RFVi0+JywgZGV2KTsKICAgICAgfSk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdkZXZpY2VzL3Bhc3NEZXZpY2VzUG9wdWxhdGVkJywgbGRldlBvcCk7CgogICAgICB0aGlzLmRldkluaXQgPSB0aGlzLmRldmljZXMuZGV2aWNlc0xpc3QuZmlsdGVyKChkZXZpY2UpID0+IHsKICAgICAgICBpZiAoCiAgICAgICAgICBkZXZpY2UubG9jYXRpb24gJiYKICAgICAgICAgIGRldmljZS5sb2NhdGlvbi5jb29yZGluYXRlcyAmJgogICAgICAgICAgZGV2aWNlLmxvY2F0aW9uLmNvb3JkaW5hdGVzLmxlbmd0aCA9PT0gMgogICAgICAgICkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgdGhpcy5kZXZGaWx0ciA9IHRoaXMuZGV2SW5pdDsKICAgIH0sCgogICAgYXN5bmMgbG9hZFByb2plY3RzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHRva2VuID0gdGhpcy51c2Vycy51c2VyLnRva2VuOwogICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdwcm9qZWN0cy9nZXRQcm9qZWN0cycsIHRva2VuKTsKICAgICAgICBpZiAocmVzLmRhdGEucHJvamVjdHMpIHsKICAgICAgICAgIHRoaXMucHJvSXRlbXMgPSByZXMuZGF0YS5wcm9qZWN0cy5tYXAoKHApID0+IHsKICAgICAgICAgICAgcmV0dXJuIHsgdGV4dDogcC5uYW1lLCB2YWx1ZTogcC5faWQgfTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIHRoaXMucHJvSXRlbXMudW5zaGlmdCh7IHRleHQ6ICdUb2RvcycsIHZhbHVlOiAnYWxsJyB9KTsKICAgICAgICB9CiAgICAgICAgLy9jb25zb2xlLmxvZygnUkVTUFVFU1RBOiAnLCByZXMpOwogICAgICAgIHJldHVybiByZXM7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKCdbRVJST1JdIC0gbG9hZFByb2plY3RzOiAnICsgZXJyLm1lc3NhZ2UpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGxvYWRBbGxEZXZpY2VzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHRva2VuID0gdGhpcy51c2Vycy51c2VyLnRva2VuOwogICAgICAgIGxldCBpZHMgPSB0aGlzLnByb2plY3RzLnByb2plY3RMaXN0Lm1hcCgocHJvamVjdCkgPT4gcHJvamVjdC5faWQpOwogICAgICAgIGNvbnN0IHBhcmFtcyA9IFt0b2tlbiwgaWRzXTsKICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZGV2aWNlcy9nZXRBbGxEZXZQcm8nLCBwYXJhbXMpOwogICAgICAgIHRoaXMucG9wdWxhdGVQcm9HcnAoKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKCdbRVJST1JdIC0gTG9hZERldmljZXM6ICcgKyBlLm1lc3NhZ2UpOwogICAgICB9CiAgICB9LAoKICAgIGxvYWRHcm91cHMoKSB7CiAgICAgIHRoaXMuZ3JwU2VsID0gJ2FsbCc7CiAgICAgIHRoaXMuZGV2U2VsID0gJ2FsbCc7CiAgICAgIHRoaXMubGFiZWxHcnAgPSAnRWxpZ2UgdW4gZ3J1cG8nOwogICAgICB0aGlzLmxhYmVsRGV2ID0gJ0VsaWdlIHVuIGRpc3Bvc2l0aXZvJzsKCiAgICAgIGlmICh0aGlzLnByb1NlbCA9PT0gJ2FsbCcpIHsKICAgICAgICB0aGlzLmRldkZpbHRyID0gdGhpcy5kZXZJbml0OwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5ncnBEaXMgPSBmYWxzZTsKICAgICAgdGhpcy5kZXZEaXMgPSB0cnVlOwogICAgICB0aGlzLmJ0bkRpcyA9IHRydWU7CiAgICAgIHRoaXMuZ3JwSXRlbXMgPSBbXTsKICAgICAgdGhpcy5kZXZJdGVtcyA9IFtdOwoKICAgICAgLy9jb25zb2xlLmxvZygnUHJvamVjdCBpZCBzZWxlY3RlZDogJywgdGhpcy5wcm9TZWwpOwogICAgICB0aGlzLnByb2plY3RzLnByb2plY3RMaXN0LmZvckVhY2goKHApID0+IHsKICAgICAgICBpZiAocC5faWQgPT09IHRoaXMucHJvU2VsKSB7CiAgICAgICAgICB0aGlzLmdycEl0ZW1zID0gcC5ncm91cHMubWFwKChnKSA9PiB7CiAgICAgICAgICAgIHJldHVybiB7IHRleHQ6IGcubmFtZSwgdmFsdWU6IGcuX2lkIH07CiAgICAgICAgICB9KTsKCiAgICAgICAgICB0aGlzLmdycEl0ZW1zLnVuc2hpZnQoeyB0ZXh0OiAnVG9kb3MnLCB2YWx1ZTogJ2FsbCcgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgYXN5bmMgbG9hZERldmljZXMoKSB7CiAgICAgIGlmICh0aGlzLmdycFNlbCA9PT0gJ2FsbCcpIHsKICAgICAgICB0aGlzLmRldlNlbCA9ICdhbGwnOwogICAgICAgIHRoaXMuZGV2RGlzID0gdHJ1ZTsKICAgICAgICB0aGlzLmJ0bkRpcyA9IGZhbHNlOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5kZXZEaXMgPSBmYWxzZTsKICAgICAgdGhpcy5idG5EaXMgPSB0cnVlOwoKICAgICAgdHJ5IHsKICAgICAgICBsZXQgcGFyYW1zID0gW3RoaXMudXNlcnMudXNlci50b2tlbl07CiAgICAgICAgcGFyYW1zLnB1c2godGhpcy5wcm9TZWwpOwogICAgICAgIHBhcmFtcy5wdXNoKHRoaXMuZ3JwU2VsKTsKICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgKICAgICAgICAgICdkZXZpY2VzL2dldERldmljZXNHcm91cCcsCiAgICAgICAgICBwYXJhbXMKICAgICAgICApOwoKICAgICAgICBpZiAocmVzLmRhdGEuZGV2aWNlcykgewogICAgICAgICAgdGhpcy5kZXZJdGVtcyA9IHJlcy5kYXRhLmRldmljZXMubWFwKChkKSA9PiB7CiAgICAgICAgICAgIHJldHVybiB7IHRleHQ6IGQubmFtZSwgdmFsdWU6IGQuX2lkIH07CiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuZGV2SXRlbXMudW5zaGlmdCh7IHRleHQ6ICdUb2RvcycsIHZhbHVlOiAnYWxsJyB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlczsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1tFUlJPUl0gLSBsb2FkRGV2aWNlczogJyArIGVyci5tZXNzYWdlKTsKICAgICAgfQogICAgfSwKCiAgICBmaWx0ZXJEZXZpY2VzKCkgewogICAgICB0aGlzLmRldkZpbHRyID0gdGhpcy5kZXZJbml0OwogICAgICB0aGlzLmRldkRldGFpbCA9ICcnOwoKICAgICAgaWYgKHRoaXMucHJvU2VsICE9PSAnYWxsJykgewogICAgICAgIHRoaXMuZGV2RmlsdHIgPSB0aGlzLmRldkZpbHRyLmZpbHRlcigoZGV2aWNlKSA9PiB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCctLS0tLS0tPiBQcm9qZWN0IGZpbHRlcmVkOiAnLCBkZXZpY2UucHJvamVjdC5faWQpOwogICAgICAgICAgaWYgKGRldmljZS5wcm9qZWN0Ll9pZCA9PT0gdGhpcy5wcm9TZWwpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIGlmICh0aGlzLmdycFNlbCAhPT0gJ2FsbCcpIHsKICAgICAgICAgIHRoaXMuZGV2RmlsdHIgPSB0aGlzLmRldkZpbHRyLmZpbHRlcigoZGV2aWNlKSA9PiB7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coJy0tLS0tLS0+IEdyb3VwIGZpbHRlcmVkOiAnLCBkZXZpY2UuZ3JvdXAuX2lkKTsKICAgICAgICAgICAgaWYgKGRldmljZS5ncm91cC5faWQgPT09IHRoaXMuZ3JwU2VsKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKCiAgICAgICAgICBpZiAodGhpcy5kZXZTZWwgIT09ICdhbGwnKSB7CiAgICAgICAgICAgIHRoaXMuZGV2RmlsdHIgPSB0aGlzLmRldkZpbHRyLmZpbHRlcigoZGV2aWNlKSA9PiB7CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnLS0tLS0tLT4gRGV2aWNlIGZpbHRlcmVkOiAnLCBkZXZpY2UuX2lkKTsKICAgICAgICAgICAgICBpZiAoZGV2aWNlLl9pZCA9PT0gdGhpcy5kZXZTZWwpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kZXZGaWx0ciA9IHRoaXMuZGV2SW5pdDsKICAgICAgfQogICAgfSwKCiAgICBsb2FkQ29vcmRpbmF0ZXMoKSB7CiAgICAgIGNvbnN0IGRlZkNvb3IgPSBbMi45ODYyOTE4NzMzNzk2NDg2LCAzOS41NzM4MDY0MDMzNTI1N107CiAgICAgIHRoaXMuY29vcmRpbmF0ZXMgPSBkZWZDb29yOwoKICAgICAgdGhpcy5kZXZGaWx0ciA9IHRoaXMuZGV2aWNlcy5kZXZpY2VzTGlzdC5maWx0ZXIoKGRldmljZSkgPT4gewogICAgICAgIGlmICgKICAgICAgICAgIGRldmljZS5sb2NhdGlvbiAmJgogICAgICAgICAgZGV2aWNlLmxvY2F0aW9uLmNvb3JkaW5hdGVzICYmCiAgICAgICAgICBkZXZpY2UubG9jYXRpb24uY29vcmRpbmF0ZXMubGVuZ3RoID09PSAyCiAgICAgICAgKSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIG9uTWFwTG9hZChldmVudCkgewogICAgICBjb25zdCBhc3luY0FjdGlvbnMgPSBldmVudC5jb21wb25lbnQuYWN0aW9uczsKCiAgICAgIGNvbnN0IG5ld1BhcmFtcyA9IGF3YWl0IGFzeW5jQWN0aW9ucy5mbHlUbyh7CiAgICAgICAgY2VudGVyOiB0aGlzLmNvb3JkaW5hdGVzLAogICAgICAgIHpvb206IDEwLAogICAgICAgIHNwZWVkOiAxLAogICAgICB9KTsKICAgIH0sCgogICAgYXN5bmMgdmlld0luZm8oZGV2aWNlKSB7CiAgICAgIHRoaXMuZGV2TG9hZGVkID0gZmFsc2U7CiAgICAgIHRoaXMuZGV2RGV0YWlsID0gZGV2aWNlOwogICAgICBsZXQgcGFyYW1zID0gWyd4eXRWeHZESlNEN1Fxc2UxVk9LZGQnXTsKICAgICAgcGFyYW1zLnB1c2godGhpcy5kZXZEZXRhaWwuX2lkKTsKICAgICAgbGV0IHNlbkxpc3QgPSB0aGlzLmRldkRldGFpbC5zZW5zb3JzLm1hcCgoc2Vuc29yKSA9PiB7CiAgICAgICAgcmV0dXJuIHNlbnNvci5faWQ7CiAgICAgIH0pOwogICAgICBwYXJhbXMucHVzaChzZW5MaXN0LmpvaW4oJywnKSk7CiAgICAgIGlmICh0aGlzLmRldkRldGFpbC5sYXN0RW50cnkpIHsKICAgICAgICBwYXJhbXMucHVzaChuZXcgRGF0ZShuZXcgRGF0ZSh0aGlzLmRldkRldGFpbC5sYXN0RW50cnkpIC0gNjAgKiAxMDAwKSk7CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2RldmljZXMvZ2V0RGF0YScsIHBhcmFtcyk7CiAgICAgICAgaWYgKHJlcy5zZXJpZXMpIHsKICAgICAgICAgIHJlcy5zZXJpZXMuZm9yRWFjaCgoc2VyaWUpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ1NFUklFOiAnLCBzZXJpZSk7CiAgICAgICAgICAgIGxldCBpZFNlbiA9IHNlcmllLnNlbnNvcjsKICAgICAgICAgICAgaWYgKHNlcmllLnNhbXBsZXMpIHsKICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBzZXJpZS5zYW1wbGVzW3NlcmllLnNhbXBsZXMubGVuZ3RoIC0gMV0udmFsdWU7CiAgICAgICAgICAgICAgdGhpcy5kZXZEZXRhaWwuc2Vuc29ycy5mb3JFYWNoKChzZW5zb3IpID0+IHsKICAgICAgICAgICAgICAgIGlmIChzZW5zb3IuX2lkID09PSBpZFNlbikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnLS0tLS0tPiBhbmFkaWRvOiAnLCB2YWx1ZSk7CiAgICAgICAgICAgICAgICAgIHNlbnNvci5sYXN0RGF0YSA9IHZhbHVlID8gdmFsdWUgOiAnLSc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZygnLS0tPicsIHRoaXMuZGV2RGV0YWlsKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1tFUlJPUl0gLSBnZXRMYXN0RGF0YTogJyArIGVyci5tZXNzYWdlKTsKICAgICAgfQogICAgICB0aGlzLmRldkxvYWRlZCA9IHRydWU7CiAgICB9LAogIH0sCgogIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICBhd2FpdCB0aGlzLmxvYWRQcm9qZWN0cygpOwogICAgYXdhaXQgdGhpcy5sb2FkQWxsRGV2aWNlcygpOwogICAgdGhpcy5sb2FkQ29vcmRpbmF0ZXMoKTsKICAgIHRoaXMubWFwYm94ID0gTWFwYm94OwogIH0sCn07Cg=="},{"version":3,"sources":["Mapa.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Mapa.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container>\n    <Loading :loading=\"cargando\"></Loading>\n    <Title\n      :title=\"'Mapa'\"\n      :color=\"'secondary--text'\"\n      :path=\"`Home / Mapa /`\"\n    ></Title>\n    <v-row>\n      <v-col cols=\"12\" lg=\"9\">\n        <MglMap\n          :accessToken=\"accessToken\"\n          :mapStyle=\"mapStyle\"\n          :center=\"coordinates\"\n          @load=\"onMapLoad\"\n        >\n          <MglMarker\n            v-for=\"device in devFiltr\"\n            :coordinates.sync=\"device.location.coordinates\"\n            color=\"blue\"\n            :key=\"device._id\"\n          >\n            <MglPopup anchor=\"bottom-right\">\n              <v-card outlined width=\"250\" height=\"120\">\n                <!-- <v-card-title class=\"text-h6 font-weight-light\">\n                  {{ device.label }}\n                </v-card-title> -->\n                <v-card-text>\n                  <div>{{ device.project.name }}</div>\n                  <div>{{ device.group.name }}</div>\n                  <div class=\"text-overline\">{{ device.label }}</div>\n                  <div>\n                    <v-icon\n                      size=\"20\"\n                      class=\"ml-25\"\n                      color=\"primary\"\n                      @click=\"viewInfo(device)\"\n                      title=\"Consultar\"\n                    >\n                      fas fa-search\n                    </v-icon>\n                  </div>\n                </v-card-text>\n              </v-card>\n            </MglPopup>\n          </MglMarker>\n\n          <!--MglMarker :coordinates.sync=\"coordinates\" color=\"blue\" /-->\n        </MglMap>\n      </v-col>\n      <v-col cols=\"12\" lg=\"3\">\n        <v-card class=\"pa-5 pl-10 pr-10 mb-2\" outlined tile height=\"800\">\n          <v-row>\n            <v-card-title class=\"text-h6 font-weight-light\"\n              >Filtros</v-card-title\n            >\n            <v-divider></v-divider>\n            <v-col cols=\"12\"\n              ><v-select\n                :items=\"proItems\"\n                dense\n                label=\"Elige un proyecto\"\n                v-model=\"proSel\"\n                @input=\"loadGroups\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-select\n                ref=\"grpMenu\"\n                :items=\"grpItems\"\n                dense\n                :label=\"labelGrp\"\n                v-model=\"grpSel\"\n                :disabled=\"grpDis\"\n                @input=\"loadDevices\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-select\n                :items=\"devItems\"\n                dense\n                :label=\"labelDev\"\n                v-model=\"devSel\"\n                :disabled=\"devDis\"\n                @click=\"enableFilter\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\" align=\"right\">\n              <v-btn\n                class=\"ma-2 text-capitalize font-weight-ligth\"\n                color=\"primary\"\n                dark\n                width=\"30%\"\n                :disabled=\"btnDis\"\n                @click=\"filterDevices\"\n              >\n                Filtrar\n              </v-btn>\n            </v-col>\n            <v-card-title class=\"text-h6 font-weight-light\"\n              >Detalle</v-card-title\n            >\n            <v-divider></v-divider>\n\n            <div v-if=\"!devLoaded\">\n              <v-card-subtitle class=\"ml-5 pa-2 font-weight-light\">\n                Ningún dispositivo seleccionado\n              </v-card-subtitle>\n            </div>\n            <div v-if=\"devLoaded\">\n              <v-list dense>\n                <v-list-item\n                  v-for=\"(sensor, _id) in devDetail.sensors\"\n                  :key=\"_id\"\n                >\n                  <v-list-item-content>\n                    <v-list-item-title class=\"text-overline\">\n                      {{ sensor.name }}\n                    </v-list-item-title>\n                    <v-list-item-subtitle\n                      class=\"text-h6 font-weight-light grey--text ml-8 mt-2\"\n                    >\n                      <span v-if=\"!devDetail.lastEntry\"> - </span>\n                      <span v-else>\n                        {{ sensor.lastData }}\n                      </span>\n                      {{ sensor.symbol }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </v-list>\n              <div class=\"text-overline ml-2 font-weight-light grey--text\">\n                <div>Updated at {{ devDetail.lastEntry }}</div>\n              </div>\n            </div>\n          </v-row>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport Title from '@/components/Title';\nimport Loading from '@/components/Loading';\nimport { mapState } from 'vuex';\n\nimport Mapbox from 'mapbox-gl';\nimport { MglMap, MglMarker, MglPopup } from 'vue-mapbox';\n\nexport default {\n  data() {\n    return {\n      cargando: false,\n      accessToken: process.env.VUE_APP_MAPBOX_TOKEN,\n      mapStyle: 'mapbox://styles/mapbox/satellite-v9',\n      coordinates: [2.9862918733796486, 39.57380640335257],\n      devDetail: '',\n      devLoaded: false,\n\n      devInit: [],\n      devFiltr: [],\n      proItems: [],\n      grpItems: [],\n      devItems: [],\n      senItems: [],\n      datItems: [],\n      dateReq: [],\n\n      labelGrp: 'Elige un grupo',\n      labelDev: 'Elige un dispositivo',\n\n      menu: false,\n\n      proSel: '',\n      grpSel: '',\n      devSel: '',\n      senSel: '',\n\n      grpDis: true,\n      devDis: true,\n      btnDis: true,\n\n      showTable: false,\n    };\n  },\n  components: {\n    Title,\n    Loading,\n    MglMap,\n    MglMarker,\n    MglPopup,\n  },\n  computed: {\n    ...mapState(['projects', 'groups', 'users', 'devices']),\n  },\n  methods: {\n    enableFilter() {\n      this.btnDis = false;\n    },\n\n    /**\n     * This method is used for get group info in devices objects.\n     * By default, each device only contains _id group field.\n     * In order to provide update and create functions, is\n     * necessary dispose this info in forms.\n     */\n    populateProGrp() {\n      // Group treatment Get idGroup and name\n      const ldevPop = []; //\n\n      this.devices.devicesList.forEach((dev) => {\n        const idPro = dev.project._id;\n        const idGrp = dev.group;\n        const pro = this.projects.projectList.find(\n          (item) => item._id === idPro\n        );\n        const grp = pro.groups.find((item) => item._id === idGrp);\n        if (!pro || !grp) {\n          console.log('MALLLLLL grupo o proyecto no encontrado!!!!');\n        } else {\n          delete dev.group;\n          let ngrp = {\n            _id: grp._id,\n            name: grp.name,\n            code: grp.code,\n          };\n          dev.group = ngrp;\n        }\n        ldevPop.push(dev);\n        //console.log('DEV->', dev);\n      });\n      this.$store.dispatch('devices/passDevicesPopulated', ldevPop);\n\n      this.devInit = this.devices.devicesList.filter((device) => {\n        if (\n          device.location &&\n          device.location.coordinates &&\n          device.location.coordinates.length === 2\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      this.devFiltr = this.devInit;\n    },\n\n    async loadProjects() {\n      try {\n        const token = this.users.user.token;\n        const res = await this.$store.dispatch('projects/getProjects', token);\n        if (res.data.projects) {\n          this.proItems = res.data.projects.map((p) => {\n            return { text: p.name, value: p._id };\n          });\n\n          this.proItems.unshift({ text: 'Todos', value: 'all' });\n        }\n        //console.log('RESPUESTA: ', res);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadProjects: ' + err.message);\n      }\n    },\n\n    async loadAllDevices() {\n      try {\n        const token = this.users.user.token;\n        let ids = this.projects.projectList.map((project) => project._id);\n        const params = [token, ids];\n        await this.$store.dispatch('devices/getAllDevPro', params);\n        this.populateProGrp();\n      } catch (e) {\n        console.log('[ERROR] - LoadDevices: ' + e.message);\n      }\n    },\n\n    loadGroups() {\n      this.grpSel = 'all';\n      this.devSel = 'all';\n      this.labelGrp = 'Elige un grupo';\n      this.labelDev = 'Elige un dispositivo';\n\n      if (this.proSel === 'all') {\n        this.devFiltr = this.devInit;\n        return;\n      }\n\n      this.grpDis = false;\n      this.devDis = true;\n      this.btnDis = true;\n      this.grpItems = [];\n      this.devItems = [];\n\n      //console.log('Project id selected: ', this.proSel);\n      this.projects.projectList.forEach((p) => {\n        if (p._id === this.proSel) {\n          this.grpItems = p.groups.map((g) => {\n            return { text: g.name, value: g._id };\n          });\n\n          this.grpItems.unshift({ text: 'Todos', value: 'all' });\n        }\n      });\n    },\n\n    async loadDevices() {\n      if (this.grpSel === 'all') {\n        this.devSel = 'all';\n        this.devDis = true;\n        this.btnDis = false;\n        return;\n      }\n\n      this.devDis = false;\n      this.btnDis = true;\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.proSel);\n        params.push(this.grpSel);\n        const res = await this.$store.dispatch(\n          'devices/getDevicesGroup',\n          params\n        );\n\n        if (res.data.devices) {\n          this.devItems = res.data.devices.map((d) => {\n            return { text: d.name, value: d._id };\n          });\n          this.devItems.unshift({ text: 'Todos', value: 'all' });\n        }\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n\n    filterDevices() {\n      this.devFiltr = this.devInit;\n      this.devDetail = '';\n\n      if (this.proSel !== 'all') {\n        this.devFiltr = this.devFiltr.filter((device) => {\n          //console.log('-------> Project filtered: ', device.project._id);\n          if (device.project._id === this.proSel) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n\n        if (this.grpSel !== 'all') {\n          this.devFiltr = this.devFiltr.filter((device) => {\n            //console.log('-------> Group filtered: ', device.group._id);\n            if (device.group._id === this.grpSel) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n\n          if (this.devSel !== 'all') {\n            this.devFiltr = this.devFiltr.filter((device) => {\n              //console.log('-------> Device filtered: ', device._id);\n              if (device._id === this.devSel) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n          }\n        }\n      } else {\n        this.devFiltr = this.devInit;\n      }\n    },\n\n    loadCoordinates() {\n      const defCoor = [2.9862918733796486, 39.57380640335257];\n      this.coordinates = defCoor;\n\n      this.devFiltr = this.devices.devicesList.filter((device) => {\n        if (\n          device.location &&\n          device.location.coordinates &&\n          device.location.coordinates.length === 2\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    },\n\n    async onMapLoad(event) {\n      const asyncActions = event.component.actions;\n\n      const newParams = await asyncActions.flyTo({\n        center: this.coordinates,\n        zoom: 10,\n        speed: 1,\n      });\n    },\n\n    async viewInfo(device) {\n      this.devLoaded = false;\n      this.devDetail = device;\n      let params = ['xytVxvDJSD7Qqse1VOKdd'];\n      params.push(this.devDetail._id);\n      let senList = this.devDetail.sensors.map((sensor) => {\n        return sensor._id;\n      });\n      params.push(senList.join(','));\n      if (this.devDetail.lastEntry) {\n        params.push(new Date(new Date(this.devDetail.lastEntry) - 60 * 1000));\n      }\n\n      try {\n        const res = await this.$store.dispatch('devices/getData', params);\n        if (res.series) {\n          res.series.forEach((serie) => {\n            console.log('SERIE: ', serie);\n            let idSen = serie.sensor;\n            if (serie.samples) {\n              let value = serie.samples[serie.samples.length - 1].value;\n              this.devDetail.sensors.forEach((sensor) => {\n                if (sensor._id === idSen) {\n                  console.log('------> anadido: ', value);\n                  sensor.lastData = value ? value : '-';\n                }\n              });\n            }\n          });\n        }\n        console.log('--->', this.devDetail);\n      } catch (err) {\n        console.log('[ERROR] - getLastData: ' + err.message);\n      }\n      this.devLoaded = true;\n    },\n  },\n\n  async created() {\n    await this.loadProjects();\n    await this.loadAllDevices();\n    this.loadCoordinates();\n    this.mapbox = Mapbox;\n  },\n};\n</script>\n\n<style scopped>\n.flexcard {\n  display: flex;\n  flex-direction: column;\n}\n\n.flexcard .v-toolbar {\n  flex: 0;\n}\n</style>\n"]}]}