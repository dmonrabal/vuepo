{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Dashboard.vue?vue&type=template&id=22ba47ca&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Dashboard.vue","mtime":1651323353810},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}