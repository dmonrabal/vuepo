{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Mapa.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Mapa.vue","mtime":1654200446902},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1670512307551},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Mapa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <Loading :loading=\"cargando\"></Loading>\n    <Title\n      :title=\"'Mapa'\"\n      :color=\"'secondary--text'\"\n      :path=\"`Home / Mapa /`\"\n    ></Title>\n    <v-row>\n      <v-col cols=\"12\" lg=\"9\">\n        <MglMap\n          :accessToken=\"accessToken\"\n          :mapStyle=\"mapStyle\"\n          :center=\"coordinates\"\n          @load=\"onMapLoad\"\n        >\n          <MglMarker\n            v-for=\"device in devFiltr\"\n            :coordinates.sync=\"device.location.coordinates\"\n            color=\"blue\"\n            :key=\"device._id\"\n          >\n            <MglPopup anchor=\"bottom-right\">\n              <v-card outlined width=\"250\" height=\"120\">\n                <!-- <v-card-title class=\"text-h6 font-weight-light\">\n                  {{ device.label }}\n                </v-card-title> -->\n                <v-card-text>\n                  <div>{{ device.project.name }}</div>\n                  <div>{{ device.group.name }}</div>\n                  <div class=\"text-overline\">{{ device.label }}</div>\n                  <div>\n                    <v-icon\n                      size=\"20\"\n                      class=\"ml-25\"\n                      color=\"primary\"\n                      @click=\"viewInfo(device)\"\n                      title=\"Consultar\"\n                    >\n                      fas fa-search\n                    </v-icon>\n                  </div>\n                </v-card-text>\n              </v-card>\n            </MglPopup>\n          </MglMarker>\n\n          <!--MglMarker :coordinates.sync=\"coordinates\" color=\"blue\" /-->\n        </MglMap>\n      </v-col>\n      <v-col cols=\"12\" lg=\"3\">\n        <v-card class=\"pa-5 pl-10 pr-10 mb-2\" outlined tile height=\"800\">\n          <v-row>\n            <v-card-title class=\"text-h6 font-weight-light\"\n              >Filtros</v-card-title\n            >\n            <v-divider></v-divider>\n            <v-col cols=\"12\"\n              ><v-select\n                :items=\"proItems\"\n                dense\n                label=\"Elige un proyecto\"\n                v-model=\"proSel\"\n                @input=\"loadGroups\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-select\n                ref=\"grpMenu\"\n                :items=\"grpItems\"\n                dense\n                :label=\"labelGrp\"\n                v-model=\"grpSel\"\n                :disabled=\"grpDis\"\n                @input=\"loadDevices\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-select\n                :items=\"devItems\"\n                dense\n                :label=\"labelDev\"\n                v-model=\"devSel\"\n                :disabled=\"devDis\"\n                @click=\"enableFilter\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"12\" align=\"right\">\n              <v-btn\n                class=\"ma-2 text-capitalize font-weight-ligth\"\n                color=\"primary\"\n                dark\n                width=\"30%\"\n                :disabled=\"btnDis\"\n                @click=\"filterDevices\"\n              >\n                Filtrar\n              </v-btn>\n            </v-col>\n            <v-card-title class=\"text-h6 font-weight-light\"\n              >Detalle</v-card-title\n            >\n            <v-divider></v-divider>\n\n            <div v-if=\"!devLoaded\">\n              <v-card-subtitle class=\"ml-5 pa-2 font-weight-light\">\n                Ningún dispositivo seleccionado\n              </v-card-subtitle>\n            </div>\n            <div v-if=\"devLoaded\">\n              <v-list dense>\n                <v-list-item\n                  v-for=\"(sensor, _id) in devDetail.sensors\"\n                  :key=\"_id\"\n                >\n                  <v-list-item-content>\n                    <v-list-item-title class=\"text-overline\">\n                      {{ sensor.name }}\n                    </v-list-item-title>\n                    <v-list-item-subtitle\n                      class=\"text-h6 font-weight-light grey--text ml-8 mt-2\"\n                    >\n                      <span v-if=\"!devDetail.lastEntry\"> - </span>\n                      <span v-else>\n                        {{ sensor.lastData }}\n                      </span>\n                      {{ sensor.symbol }}\n                    </v-list-item-subtitle>\n                  </v-list-item-content>\n                </v-list-item>\n              </v-list>\n              <div class=\"text-overline ml-2 font-weight-light grey--text\">\n                <div>Updated at {{ devDetail.lastEntry }}</div>\n              </div>\n            </div>\n          </v-row>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport Title from '@/components/Title';\nimport Loading from '@/components/Loading';\nimport { mapState } from 'vuex';\n\nimport Mapbox from 'mapbox-gl';\nimport { MglMap, MglMarker, MglPopup } from 'vue-mapbox';\n\nexport default {\n  data() {\n    return {\n      cargando: false,\n      accessToken: process.env.VUE_APP_MAPBOX_TOKEN,\n      mapStyle: 'mapbox://styles/mapbox/satellite-v9',\n      coordinates: [2.9862918733796486, 39.57380640335257],\n      devDetail: '',\n      devLoaded: false,\n\n      devInit: [],\n      devFiltr: [],\n      proItems: [],\n      grpItems: [],\n      devItems: [],\n      senItems: [],\n      datItems: [],\n      dateReq: [],\n\n      labelGrp: 'Elige un grupo',\n      labelDev: 'Elige un dispositivo',\n\n      menu: false,\n\n      proSel: '',\n      grpSel: '',\n      devSel: '',\n      senSel: '',\n\n      grpDis: true,\n      devDis: true,\n      btnDis: true,\n\n      showTable: false,\n    };\n  },\n  components: {\n    Title,\n    Loading,\n    MglMap,\n    MglMarker,\n    MglPopup,\n  },\n  computed: {\n    ...mapState(['projects', 'groups', 'users', 'devices']),\n  },\n  methods: {\n    enableFilter() {\n      this.btnDis = false;\n    },\n\n    /**\n     * This method is used for get group info in devices objects.\n     * By default, each device only contains _id group field.\n     * In order to provide update and create functions, is\n     * necessary dispose this info in forms.\n     */\n    populateProGrp() {\n      // Group treatment Get idGroup and name\n      const ldevPop = []; //\n\n      this.devices.devicesList.forEach((dev) => {\n        const idPro = dev.project._id;\n        const idGrp = dev.group;\n        const pro = this.projects.projectList.find(\n          (item) => item._id === idPro\n        );\n        const grp = pro.groups.find((item) => item._id === idGrp);\n        if (!pro || !grp) {\n          console.log('MALLLLLL grupo o proyecto no encontrado!!!!');\n        } else {\n          delete dev.group;\n          let ngrp = {\n            _id: grp._id,\n            name: grp.name,\n            code: grp.code,\n          };\n          dev.group = ngrp;\n        }\n        ldevPop.push(dev);\n        //console.log('DEV->', dev);\n      });\n      this.$store.dispatch('devices/passDevicesPopulated', ldevPop);\n\n      this.devInit = this.devices.devicesList.filter((device) => {\n        if (\n          device.location &&\n          device.location.coordinates &&\n          device.location.coordinates.length === 2\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      this.devFiltr = this.devInit;\n    },\n\n    async loadProjects() {\n      try {\n        const token = this.users.user.token;\n        const res = await this.$store.dispatch('projects/getProjects', token);\n        if (res.data.projects) {\n          this.proItems = res.data.projects.map((p) => {\n            return { text: p.name, value: p._id };\n          });\n\n          this.proItems.unshift({ text: 'Todos', value: 'all' });\n        }\n        //console.log('RESPUESTA: ', res);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadProjects: ' + err.message);\n      }\n    },\n\n    async loadAllDevices() {\n      try {\n        const token = this.users.user.token;\n        let ids = this.projects.projectList.map((project) => project._id);\n        const params = [token, ids];\n        await this.$store.dispatch('devices/getAllDevPro', params);\n        this.populateProGrp();\n      } catch (e) {\n        console.log('[ERROR] - LoadDevices: ' + e.message);\n      }\n    },\n\n    loadGroups() {\n      this.grpSel = 'all';\n      this.devSel = 'all';\n      this.labelGrp = 'Elige un grupo';\n      this.labelDev = 'Elige un dispositivo';\n\n      if (this.proSel === 'all') {\n        this.devFiltr = this.devInit;\n        return;\n      }\n\n      this.grpDis = false;\n      this.devDis = true;\n      this.btnDis = true;\n      this.grpItems = [];\n      this.devItems = [];\n\n      //console.log('Project id selected: ', this.proSel);\n      this.projects.projectList.forEach((p) => {\n        if (p._id === this.proSel) {\n          this.grpItems = p.groups.map((g) => {\n            return { text: g.name, value: g._id };\n          });\n\n          this.grpItems.unshift({ text: 'Todos', value: 'all' });\n        }\n      });\n    },\n\n    async loadDevices() {\n      if (this.grpSel === 'all') {\n        this.devSel = 'all';\n        this.devDis = true;\n        this.btnDis = false;\n        return;\n      }\n\n      this.devDis = false;\n      this.btnDis = true;\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.proSel);\n        params.push(this.grpSel);\n        const res = await this.$store.dispatch(\n          'devices/getDevicesGroup',\n          params\n        );\n\n        if (res.data.devices) {\n          this.devItems = res.data.devices.map((d) => {\n            return { text: d.name, value: d._id };\n          });\n          this.devItems.unshift({ text: 'Todos', value: 'all' });\n        }\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n\n    filterDevices() {\n      this.devFiltr = this.devInit;\n      this.devDetail = '';\n\n      if (this.proSel !== 'all') {\n        this.devFiltr = this.devFiltr.filter((device) => {\n          //console.log('-------> Project filtered: ', device.project._id);\n          if (device.project._id === this.proSel) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n\n        if (this.grpSel !== 'all') {\n          this.devFiltr = this.devFiltr.filter((device) => {\n            //console.log('-------> Group filtered: ', device.group._id);\n            if (device.group._id === this.grpSel) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n\n          if (this.devSel !== 'all') {\n            this.devFiltr = this.devFiltr.filter((device) => {\n              //console.log('-------> Device filtered: ', device._id);\n              if (device._id === this.devSel) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n          }\n        }\n      } else {\n        this.devFiltr = this.devInit;\n      }\n    },\n\n    loadCoordinates() {\n      const defCoor = [2.9862918733796486, 39.57380640335257];\n      this.coordinates = defCoor;\n\n      this.devFiltr = this.devices.devicesList.filter((device) => {\n        if (\n          device.location &&\n          device.location.coordinates &&\n          device.location.coordinates.length === 2\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    },\n\n    async onMapLoad(event) {\n      const asyncActions = event.component.actions;\n\n      const newParams = await asyncActions.flyTo({\n        center: this.coordinates,\n        zoom: 10,\n        speed: 1,\n      });\n    },\n\n    async viewInfo(device) {\n      this.devLoaded = false;\n      this.devDetail = device;\n      let params = ['xytVxvDJSD7Qqse1VOKdd'];\n      params.push(this.devDetail._id);\n      let senList = this.devDetail.sensors.map((sensor) => {\n        return sensor._id;\n      });\n      params.push(senList.join(','));\n      if (this.devDetail.lastEntry) {\n        params.push(new Date(new Date(this.devDetail.lastEntry) - 60 * 1000));\n      }\n\n      try {\n        const res = await this.$store.dispatch('devices/getData', params);\n        if (res.series) {\n          res.series.forEach((serie) => {\n            console.log('SERIE: ', serie);\n            let idSen = serie.sensor;\n            if (serie.samples) {\n              let value = serie.samples[serie.samples.length - 1].value;\n              this.devDetail.sensors.forEach((sensor) => {\n                if (sensor._id === idSen) {\n                  console.log('------> anadido: ', value);\n                  sensor.lastData = value ? value : '-';\n                }\n              });\n            }\n          });\n        }\n        console.log('--->', this.devDetail);\n      } catch (err) {\n        console.log('[ERROR] - getLastData: ' + err.message);\n      }\n      this.devLoaded = true;\n    },\n  },\n\n  async created() {\n    await this.loadProjects();\n    await this.loadAllDevices();\n    this.loadCoordinates();\n    this.mapbox = Mapbox;\n  },\n};\n</script>\n\n<style scopped>\n.flexcard {\n  display: flex;\n  flex-direction: column;\n}\n\n.flexcard .v-toolbar {\n  flex: 0;\n}\n</style>\n"],"sourceRoot":"src/views"}]}