{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/users.js","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/users.js","mtime":1648379469869},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1641298031863},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2RhdmlkL0RvY3VtZW50b3MvRm9ybWFjaW9uL1VkZW15L1ZVRS5KUy9wcm9qZWN0L3Z1ZXBvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgdmF4aW9zIGZyb20gJ0AvcGx1Z2lucy92YXhpb3MnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyL2luZGV4JzsKaW1wb3J0IEFwcEVycm9yIGZyb20gJ0AvcGx1Z2lucy9hcHBFcnJvcic7CmltcG9ydCB7IGF1dGggfSBmcm9tICdAL3BsdWdpbnMvZmlyZWJhc2UnOwoKdmFyIHN0YXRlID0gZnVuY3Rpb24gc3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIGlzTG9nZ2VkOiBmYWxzZSwKICAgIHVzZXI6ICcnCiAgfTsKfTsKCnZhciBnZXR0ZXJzID0ge307CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUudXNlciA9IHBheWxvYWQ7CgogICAgaWYgKHBheWxvYWQgIT09ICcnKSB7CiAgICAgIHN0YXRlLmlzTG9nZ2VkID0gdHJ1ZTsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7CgogICAgICBpZiAoIXBheWxvYWQudXBkYXRlZCkgewogICAgICAgIC8vcm91dGVyLnB1c2goJy91c3VhcmlvJyk7CiAgICAgICAgcm91dGVyLnB1c2goJy8nKTsKICAgICAgfSBlbHNlIHt9CiAgICB9IGVsc2UgewogICAgICBzdGF0ZS5pc0xvZ2dlZCA9IGZhbHNlOwogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwogICAgICByb3V0ZXIucHVzaCgnL2xvZ2luJyk7CiAgICB9CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsb2dJbjogZnVuY3Rpb24gbG9nSW4oX3JlZiwgdXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzLCB1c2VyREIsIGZyZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gdmF4aW9zLnBvc3QoJy91c2Vycy9sb2dpbicsIHsKICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHVzZXIucGFzc3dvcmQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzICE9PSAnc3VjY2VzcycpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKHJlcy5kYXRhLm1lc3NhZ2UsIHJlcy5kYXRhLmNvZGUpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHVzZXJEQiA9IHsKICAgICAgICAgICAgICAgIG5hbWU6IHJlcy5kYXRhLnVzZXIubmFtZSwKICAgICAgICAgICAgICAgIGVtYWlsOiByZXMuZGF0YS51c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgcm9sZTogcmVzLmRhdGEudXNlci5yb2xlLAogICAgICAgICAgICAgICAgX2lkOiByZXMuZGF0YS51c2VyLl9pZCwKICAgICAgICAgICAgICAgIHRva2VuOiByZXMudG9rZW4KICAgICAgICAgICAgICB9OyAvL0ZpcmViYXNlIGxvZ2luCgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICByZXR1cm4gYXV0aC5zaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZCh1c2VyLmVtYWlsLCB1c2VyLnBhc3N3b3JkKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgZnJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnUkVTUFVFU1RBIEZJUkJBU0U6ICcsIGZyZXMpOwogICAgICAgICAgICAgIHVzZXJEQi5maXJlVUlEID0gZnJlcy51c2VyLnVpZDsKICAgICAgICAgICAgICB1c2VyREIuZmlyZVRva2VuID0gZnJlcy51c2VyLnJlZnJlc2hUb2tlbjsKICAgICAgICAgICAgICBjb21taXQoJ3NldFVzZXInLCB1c2VyREIpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNzsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiBfY29udGV4dC50MC5tZXNzYWdlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE3XV0pOwogICAgfSkpKCk7CiAgfSwKICB1cGRhdGVVc2VyOiBmdW5jdGlvbiB1cGRhdGVVc2VyKF9yZWYyLCBwYXJhbXMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgdG9rZW4sIGJvZHksIGNvbmZpZywgcmVzLCB1c2VyTG9nZ2VkOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKICAgICAgICAgICAgICB0b2tlbiA9IHBhcmFtc1swXTsKICAgICAgICAgICAgICBib2R5ID0gcGFyYW1zWzFdOwogICAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0b2tlbikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHZheGlvcy51cGRhdGUoJy91c2Vycy91cGRhdGVNZScsIGJvZHksIGNvbmZpZyk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1JTUDogJywgcmVzKTsKICAgICAgICAgICAgICB1c2VyTG9nZ2VkID0gewogICAgICAgICAgICAgICAgbmFtZTogcmVzLmRhdGEudXBkYXRlZFVzZXIubmFtZSwKICAgICAgICAgICAgICAgIGVtYWlsOiByZXMuZGF0YS51cGRhdGVkVXNlci5lbWFpbCwKICAgICAgICAgICAgICAgIHJvbGU6IHJlcy5kYXRhLnVwZGF0ZWRVc2VyLnJvbGUsCiAgICAgICAgICAgICAgICBfaWQ6IHJlcy5kYXRhLnVwZGF0ZWRVc2VyLl9pZCwKICAgICAgICAgICAgICAgIHBob3RvOiByZXMuZGF0YS51cGRhdGVkVXNlci5waG90bywKICAgICAgICAgICAgICAgIHVwZGF0ZWQ6IHRydWUsCiAgICAgICAgICAgICAgICB0b2tlbjogdG9rZW4KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIHN0YXRlLmlzTG9nZ2VkID0gdHJ1ZTsKICAgICAgICAgICAgICBzdGF0ZS51c2VyID0gdXNlckxvZ2dlZDsKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsIEpTT04uc3RyaW5naWZ5KHVzZXJMb2dnZWQpKTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFVzZXInLCB1c2VyTG9nZ2VkKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNzsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiBfY29udGV4dDIudDAubWVzc2FnZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzQsIDE3XV0pOwogICAgfSkpKCk7CiAgfSwKICBjcmVhdGVVc2VyOiBmdW5jdGlvbiBjcmVhdGVVc2VyKF9yZWYzLCB1c2VyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzREIsIHVzZXJEQiwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiB2YXhpb3MucG9zdCgnL3VzZXJzL3NpZ251cCcsIHsKICAgICAgICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSwKICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHVzZXIucGFzc3dvcmQsCiAgICAgICAgICAgICAgICBwYXNzd29yZENvbmZpcm06IHVzZXIucGFzc3dvcmRDb25maXJtCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzREIgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzREIuc3RhdHVzICE9PSAnc3VjY2VzcycpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRocm93IG5ldyBBcHBFcnJvcihyZXNEQi5kYXRhLm1lc3NhZ2UsIHJlc0RCLnN0YXR1cyk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgdXNlckRCID0gewogICAgICAgICAgICAgICAgbmFtZTogcmVzREIuZGF0YS51c2VyLm5hbWUsCiAgICAgICAgICAgICAgICBlbWFpbDogcmVzREIuZGF0YS51c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgcm9sZTogcmVzREIuZGF0YS51c2VyLnJvbGUsCiAgICAgICAgICAgICAgICBfaWQ6IHJlc0RCLmRhdGEudXNlci5faWQsCiAgICAgICAgICAgICAgICB0b2tlbjogcmVzREIuZGF0YS51c2VyLnRva2VuCiAgICAgICAgICAgICAgfTsgLy9GaXJlYmFzZSBjcmVhdGUgdXNlcgoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgIHJldHVybiBhdXRoLmNyZWF0ZVVzZXJXaXRoRW1haWxBbmRQYXNzd29yZCh1c2VyLmVtYWlsLCB1c2VyLnBhc3N3b3JkKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnUkVTUFVFU1RBIEZJUkVCQVNFOiAnLCByZXMpOwogICAgICAgICAgICAgIHVzZXJEQi5maXJlVUlEID0gcmVzLnVzZXIudWlkOwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0VXNlcicsIHVzZXJEQik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLAogICAgICAgICAgICAgICAgbWVzc2FnZTogX2NvbnRleHQzLnQwLm1lc3NhZ2UKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1sxLCAxNl1dKTsKICAgIH0pKSgpOwogIH0sCiAgbG9nT3V0OiBmdW5jdGlvbiBsb2dPdXQoX3JlZjQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdCwgc3RhdGUgPSBfcmVmNC5zdGF0ZTsKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBhdXRoLnNpZ25PdXQoKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldFVzZXInLCAnJyk7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDg7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbRVJST1JdICcsIF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMSwgOF1dKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/users.js"],"names":["vaxios","router","AppError","auth","state","isLogged","user","getters","mutations","setUser","payload","localStorage","setItem","JSON","stringify","updated","push","removeItem","actions","logIn","commit","post","email","password","res","status","data","message","code","userDB","name","role","_id","token","signInWithEmailAndPassword","fres","fireUID","uid","fireToken","refreshToken","updateUser","params","body","config","headers","Authorization","update","console","log","userLogged","updatedUser","photo","createUser","passwordConfirm","resDB","createUserWithEmailAndPassword","logOut","signOut","namespaced"],"mappings":"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","sourcesContent":["import vaxios from '@/plugins/vaxios';\nimport router from '@/router/index';\nimport AppError from '@/plugins/appError';\nimport { auth } from '@/plugins/firebase';\n\nconst state = () => ({\n  isLogged: false,\n  user: '',\n});\n\nconst getters = {};\nconst mutations = {\n  setUser(state, payload) {\n    state.user = payload;\n    if (payload !== '') {\n      state.isLogged = true;\n      localStorage.setItem('user', JSON.stringify(payload));\n      if (!payload.updated) {\n        //router.push('/usuario');\n        router.push('/');\n      } else {\n      }\n      \n    } else {\n      state.isLogged = false;\n      localStorage.removeItem('user');\n      router.push('/login');\n    }\n  },\n};\n\nconst actions = {\n  async logIn({ commit }, user) {\n    try {\n      const res = await vaxios.post('/users/login', {\n        email: user.email,\n        password: user.password,\n      });\n      // firebase authentication\n      if (res.status !== 'success') {\n        throw new AppError(res.data.message, res.data.code);\n      }\n      let userDB = {\n        name: res.data.user.name,\n        email: res.data.user.email,\n        role: res.data.user.role,\n        _id: res.data.user._id,\n        token: res.token,\n      };\n\n      //Firebase login\n      const fres = await auth.signInWithEmailAndPassword(\n        user.email,\n        user.password\n      );\n      //console.log('RESPUESTA FIRBASE: ', fres);\n      userDB.fireUID = fres.user.uid;\n      userDB.fireToken = fres.user.refreshToken;\n      commit('setUser', userDB);\n      return res;\n    } catch (err) {\n      //console.log('[ERROR] - logIn: ', err);\n      return { status: 'failed', message: err.message };\n    }\n  },\n\n  async updateUser({ commit, state }, params) {\n    const token = params[0];\n    const body = params[1];\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      const res = await vaxios.update('/users/updateMe', body, config);\n      console.log('RSP: ', res);\n      let userLogged = {\n        name: res.data.updatedUser.name,\n        email: res.data.updatedUser.email,\n        role: res.data.updatedUser.role,\n        _id: res.data.updatedUser._id,\n        photo: res.data.updatedUser.photo,\n        updated: true,\n        token: token,\n      };\n      state.isLogged = true;\n      state.user = userLogged;\n      localStorage.setItem('user', JSON.stringify(userLogged));\n      commit('setUser', userLogged);\n      return res;\n    } catch (err) {\n      //console.log('[ERROR] - updateUser: ' + err.message);\n      return { status: 'failed', message: err.message };\n    }\n  },\n\n  async createUser({ commit }, user) {\n    try {\n      // Heroku sign up\n      const resDB = await vaxios.post('/users/signup', {\n        name: user.name,\n        email: user.email,\n        password: user.password,\n        passwordConfirm: user.passwordConfirm,\n      });\n\n      // console.log('RESPUESTA HEROKU: ', resDB);\n\n      if (resDB.status !== 'success') {\n        throw new AppError(resDB.data.message, resDB.status);\n      }\n\n      let userDB = {\n        name: resDB.data.user.name,\n        email: resDB.data.user.email,\n        role: resDB.data.user.role,\n        _id: resDB.data.user._id,\n        token: resDB.data.user.token,\n      };\n\n      //Firebase create user\n      const res = await auth.createUserWithEmailAndPassword(\n        user.email,\n        user.password\n      );\n\n      //console.log('RESPUESTA FIREBASE: ', res);\n      userDB.fireUID = res.user.uid;\n      commit('setUser', userDB);\n\n      return res;\n    } catch (err) {\n      //console.log('[ERROR] - createUser: ' + err);\n      return { status: 'failed', message: err.message };\n    }\n  },\n\n  async logOut({ commit, state }) {\n    try {\n      const res = await auth.signOut();\n      commit('setUser', '');\n    } catch (err) {\n      console.log('[ERROR] ', err);\n    }\n  },\n};\n\nexport default { namespaced: true, state, getters, mutations, actions };\n"]}]}