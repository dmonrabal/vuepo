{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Data.vue","mtime":1652818753182},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1670512307551},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9kYXZpZC9Eb2N1bWVudG9zL0Zvcm1hY2lvbi9VZGVteS9WVUUuSlMvcHJvamVjdC92dWVwby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvZGF2aWQvRG9jdW1lbnRvcy9Gb3JtYWNpb24vVWRlbXkvVlVFLkpTL3Byb2plY3QvdnVlcG8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9kYXZpZC9Eb2N1bWVudG9zL0Zvcm1hY2lvbi9VZGVteS9WVUUuSlMvcHJvamVjdC92dWVwby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVGl0bGUgZnJvbSAnQC9jb21wb25lbnRzL1RpdGxlJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IGpzUERGIGZyb20gJ2pzcGRmJzsKaW1wb3J0ICdqc3BkZi1hdXRvdGFibGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb0l0ZW1zOiBbXSwKICAgICAgZ3JwSXRlbXM6IFtdLAogICAgICBkZXZJdGVtczogW10sCiAgICAgIHNlbkl0ZW1zOiBbXSwKICAgICAgZGF0SXRlbXM6IFtdLAogICAgICBkYXRlUmVxOiBbXSwKICAgICAgbWVudTogZmFsc2UsCiAgICAgIHByb1NlbDogJycsCiAgICAgIGdycFNlbDogJycsCiAgICAgIGRldlNlbDogJycsCiAgICAgIHNlblNlbDogJycsCiAgICAgIGdycERpczogdHJ1ZSwKICAgICAgZGV2RGlzOiB0cnVlLAogICAgICBzZW5EaXM6IHRydWUsCiAgICAgIGZlY0RpczogdHJ1ZSwKICAgICAgYnRuRGlzOiB0cnVlLAogICAgICBkYXREaXM6IHRydWUsCiAgICAgIGV4cERhdERpczogdHJ1ZSwKICAgICAgc2hvd1RhYmxlOiBmYWxzZSwKICAgICAgaGVhZGVyczogW10sCiAgICAgIHNlbGVjdGVkOiBbXSwKICAgICAgZG9jUERGOiBbXSwKICAgICAgbG9hZERhdDogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd1c2VycycsICdwcm9qZWN0cycsICdncm91cHMnLCAnZGV2aWNlcyddKSksCiAgY29tcG9uZW50czogewogICAgVGl0bGU6IFRpdGxlCiAgfSwKICBtZXRob2RzOiB7CiAgICBidWlsZEhlYWRlcnM6IGZ1bmN0aW9uIGJ1aWxkSGVhZGVycygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzZW5zb3JzID0gdGhpcy5kZXZpY2VzLmRldmljZVNlbGVjdGVkLnNlbnNvcnM7CiAgICAgIHRoaXMuaGVhZGVycyA9IFtdOwoKICAgICAgaWYgKHNlbnNvcnMgJiYgc2Vuc29ycy5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5oZWFkZXJzLnB1c2goewogICAgICAgICAgdGV4dDogJ0lkJywKICAgICAgICAgIHZhbHVlOiAnaWQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgICB9KTsKICAgICAgICB0aGlzLmhlYWRlcnMucHVzaCh7CiAgICAgICAgICB0ZXh0OiAnRmVjaGEnLAogICAgICAgICAgdmFsdWU6ICdmZWNoYScsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICAgIH0pOwogICAgICAgIHNlbnNvcnMuZm9yRWFjaChmdW5jdGlvbiAocykgewogICAgICAgICAgaWYgKF90aGlzLnNlblNlbC5pbmRleE9mKHMuX2lkKSA+IC0xKSB7CiAgICAgICAgICAgIHZhciBzbmFtZSA9IHMubmFtZSArICcgKCcgKyBzLnN5bWJvbCArICcpJzsKCiAgICAgICAgICAgIF90aGlzLmhlYWRlcnMucHVzaCh7CiAgICAgICAgICAgICAgdGV4dDogc25hbWUsCiAgICAgICAgICAgICAgdmFsdWU6IHMuX2lkLAogICAgICAgICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMuc2hvd1RhYmxlID0gdHJ1ZTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGhpcy5oZWFkZXJzKTsKICAgIH0sCiAgICBsb2FkUHJvamVjdHM6IGZ1bmN0aW9uIGxvYWRQcm9qZWN0cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0b2tlbiwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgdG9rZW4gPSBfdGhpczIudXNlcnMudXNlci50b2tlbjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goJ3Byb2plY3RzL2dldFByb2plY3RzJywgdG9rZW4pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5wcm9qZWN0cykgewogICAgICAgICAgICAgICAgICBfdGhpczIucHJvSXRlbXMgPSByZXMuZGF0YS5wcm9qZWN0cy5tYXAoZnVuY3Rpb24gKHApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgdGV4dDogcC5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHAuX2lkCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IC8vY29uc29sZS5sb2coJ1JFU1BVRVNUQTogJywgcmVzKTsKCgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tFUlJPUl0gLSBsb2FkUHJvamVjdHM6ICcgKyBfY29udGV4dC50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZEdyb3VwczogZnVuY3Rpb24gbG9hZEdyb3VwcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmdycERpcyA9IGZhbHNlOwogICAgICB0aGlzLmRldkRpcyA9IHRydWU7CiAgICAgIHRoaXMuc2VuRGlzID0gdHJ1ZTsKICAgICAgdGhpcy5mZWNEaXMgPSB0cnVlOwogICAgICB0aGlzLmRhdERpcyA9IHRydWU7CiAgICAgIHRoaXMuYnRuRGlzID0gdHJ1ZTsKICAgICAgdGhpcy5leHBEYXREaXMgPSB0cnVlOwogICAgICB0aGlzLmdycEl0ZW1zID0gW107CiAgICAgIHRoaXMuZGV2SXRlbXMgPSBbXTsKICAgICAgdGhpcy5kYXRlUmVxID0gW107IC8vY29uc29sZS5sb2coJ1Byb2plY3QgaWQgc2VsZWN0ZWQ6ICcsIHRoaXMucHJvU2VsKTsKCiAgICAgIHRoaXMucHJvamVjdHMucHJvamVjdExpc3QuZm9yRWFjaChmdW5jdGlvbiAocCkgewogICAgICAgIGlmIChwLl9pZCA9PT0gX3RoaXMzLnByb1NlbCkgewogICAgICAgICAgX3RoaXMzLmdycEl0ZW1zID0gcC5ncm91cHMubWFwKGZ1bmN0aW9uIChnKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgdGV4dDogZy5uYW1lLAogICAgICAgICAgICAgIHZhbHVlOiBnLl9pZAogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBsb2FkRGV2aWNlczogZnVuY3Rpb24gbG9hZERldmljZXMoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHBhcmFtcywgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczQuZGV2RGlzID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpczQuc2VuRGlzID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzNC5idG5EaXMgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXM0LmZlY0RpcyA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpczQuZGF0RGlzID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzNC5leHBEYXREaXMgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXM0LnNlbkl0ZW1zID0gW107CiAgICAgICAgICAgICAgICBfdGhpczQuZGF0ZVJlcSA9IFtdOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgICAgcGFyYW1zID0gW190aGlzNC51c2Vycy51c2VyLnRva2VuXTsKICAgICAgICAgICAgICAgIHBhcmFtcy5wdXNoKF90aGlzNC5wcm9TZWwpOwogICAgICAgICAgICAgICAgcGFyYW1zLnB1c2goX3RoaXM0LmdycFNlbCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC4kc3RvcmUuZGlzcGF0Y2goJ2RldmljZXMvZ2V0RGV2aWNlc0dyb3VwJywgcGFyYW1zKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ0RFVklDRVM6ICcsIHJlcywgJ3BhcmFtczogJywgcGFyYW1zKTsKICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5kZXZpY2VzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNC5kZXZJdGVtcyA9IHJlcy5kYXRhLmRldmljZXMubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGQubmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBkLl9pZAogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSg4KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbRVJST1JdIC0gbG9hZERldmljZXM6ICcgKyBfY29udGV4dDIudDAubWVzc2FnZSk7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbOCwgMTldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHRvRW5hRGF0ZXM6IGZ1bmN0aW9uIHRvRW5hRGF0ZXMoKSB7CiAgICAgIHRoaXMuZmVjRGlzID0gZmFsc2U7CiAgICAgIGNvbnNvbGUubG9nKCdFbmFibGluZyBkYXRlcyEhISEnKTsKICAgIH0sCiAgICB0b0VuYUJ0bjogZnVuY3Rpb24gdG9FbmFCdG4oKSB7CiAgICAgIGNvbnNvbGUubG9nKCdFbmFibGluZyBidXR0b24hISEhJyk7CiAgICAgIHRoaXMuYnRuRGlzID0gZmFsc2U7CiAgICB9LAogICAgbG9hZFNlbnNvcnM6IGZ1bmN0aW9uIGxvYWRTZW5zb3JzKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBwYXJhbXMsIHJlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM1LnNlblNlbCA9ICcnOwogICAgICAgICAgICAgICAgX3RoaXM1LmRhdGVSZXEgPSBbXTsKICAgICAgICAgICAgICAgIF90aGlzNS5zZW5EaXMgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzNS5mZWNEaXMgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXM1LmRhdERpcyA9IHRydWU7CiAgICAgICAgICAgICAgICBfdGhpczUuYnRuRGlzID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzNS5leHBEYXREaXMgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA3OwogICAgICAgICAgICAgICAgcGFyYW1zID0gW190aGlzNS51c2Vycy51c2VyLnRva2VuXTsKICAgICAgICAgICAgICAgIHBhcmFtcy5wdXNoKF90aGlzNS5wcm9TZWwpOwogICAgICAgICAgICAgICAgcGFyYW1zLnB1c2goX3RoaXM1LmdycFNlbCk7CiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChfdGhpczUuZGV2U2VsKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LiRzdG9yZS5kaXNwYXRjaCgnZGV2aWNlcy9nZXREZXZpY2UnLCBwYXJhbXMpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmRldmljZS5zZW5zb3JzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNS5zZW5JdGVtcyA9IHJlcy5kYXRhLmRldmljZS5zZW5zb3JzLm1hcChmdW5jdGlvbiAocykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcy5faWQKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gLy9jb25zb2xlLmxvZygnREVWSUNFOiAnLCByZXMsICdpdGVtczogJywgdGhpcy5zZW5JdGVtcyk7CgoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSg3KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbRVJST1JdIC0gbG9hZERldmljZXM6ICcgKyBfY29udGV4dDMudDAubWVzc2FnZSk7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbNywgMTldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YSgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcGFyYW1zLCByZXMsIHNlcmllczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM2LmJ0bkRpcyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXM2LmxvYWREYXQgPSB0cnVlOwogICAgICAgICAgICAgICAgX3RoaXM2LmV4cERhdERpcyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIF90aGlzNi5idWlsZEhlYWRlcnMoKTsgLy8gVE9ETyBjaGFuZ2UgdG9rZW4gaGFuZGxpbmcKCgogICAgICAgICAgICAgICAgcGFyYW1zID0gWyd4eXRWeHZESlNEN1Fxc2UxVk9LZGQnXTsgLy9wYXJhbXMucHVzaCgneHl0Vnh2REpTRDdRcXNlMVZPS2RkJyk7CgogICAgICAgICAgICAgICAgcGFyYW1zLnB1c2goX3RoaXM2LmRldlNlbCk7CiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChfdGhpczYuc2VuU2VsLmpvaW4oJywnKSk7CiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChfdGhpczYuZGF0ZVJlcVswXSk7CiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChfdGhpczYuZGF0ZVJlcVsxXSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi4kc3RvcmUuZGlzcGF0Y2goJ2RldmljZXMvZ2V0RGF0YScsIHBhcmFtcyk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLnNlcmllcyAmJiByZXMuc2VyaWVzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgc2VyaWVzID0gcmVzLnNlcmllczsKICAgICAgICAgICAgICAgICAgX3RoaXM2LmRhdEl0ZW1zID0gW107CiAgICAgICAgICAgICAgICAgIHNlcmllcy5mb3JFYWNoKGZ1bmN0aW9uIChzZXJpZSkgewogICAgICAgICAgICAgICAgICAgIHZhciBpZFNlbiA9IHNlcmllLnNlbnNvcjsKICAgICAgICAgICAgICAgICAgICB2YXIgc2FtcGxlcyA9IHNlcmllLnNhbXBsZXM7CiAgICAgICAgICAgICAgICAgICAgc2FtcGxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzYW1wbGUpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRlID0gc2FtcGxlLmRhdGU7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBzYW1wbGUudmFsdWU7CgogICAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gX3RoaXM2LmRhdEl0ZW1zLmZpbmRJbmRleChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS5mZWNoYSA9PT0gZGF0ZTsKICAgICAgICAgICAgICAgICAgICAgIH0pOyAvL2NvbnN0IHNlblN0ciA9IGlkU2VuLnRvU3RyaW5nOwoKCiAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2JqID0gX3RoaXM2LmRhdEl0ZW1zW2luZGV4XTsKICAgICAgICAgICAgICAgICAgICAgICAgb2JqW2lkU2VuXSA9IHZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICBfdGhpczYuZGF0SXRlbXNbaW5kZXhdID0gb2JqOwogICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlkbiA9IF90aGlzNi5kYXRJdGVtcy5sZW5ndGggKyAxOwoKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9vYmogPSBfZGVmaW5lUHJvcGVydHkoewogICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBpZG4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgZmVjaGE6IGRhdGUKICAgICAgICAgICAgICAgICAgICAgICAgfSwgaWRTZW4sIHZhbHVlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzNi5kYXRJdGVtcy5wdXNoKF9vYmopOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczYuZGF0SXRlbXMpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBfdGhpczYubG9hZERhdCA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzksIDE3XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2Fkb2NQREZEYXRhOiBmdW5jdGlvbiBsb2Fkb2NQREZEYXRhKCkgewogICAgICBjb25zb2xlLmxvZygnTGxhbWFuZG8gYSBleHBvcnRhciBkYXRvcycpOwogICAgICB2YXIgZG9jID0gbmV3IGpzUERGKCk7CiAgICAgIHZhciBjb2xzID0gW107CiAgICAgIHZhciByb3dzID0gW107CiAgICAgIHRoaXMuaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgY29scy5wdXNoKGl0ZW0udGV4dCk7CiAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdGVkLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgICB2YXIgYXJheSA9IFtdOwogICAgICAgIHZhciBzZXJpZSA9IFtdOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZCkgewogICAgICAgICAgc2VyaWUucHVzaChkW2tleV0pOwogICAgICAgIH0KCiAgICAgICAgcm93cy5wdXNoKHNlcmllKTsKICAgICAgfSk7CiAgICAgIGRvYy5hdXRvVGFibGUoewogICAgICAgIGhlYWQ6IFtjb2xzXSwKICAgICAgICBib2R5OiByb3dzCiAgICAgIH0pOwogICAgICBkb2Muc2F2ZSgncmVwb3J0LnBkZicpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczcgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgcHJqOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM3LmxvYWRQcm9qZWN0cygpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHByaiA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHByaik7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["Data.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <Title\n      :title=\"'Datos'\"\n      :color=\"'secondary--text'\"\n      :path=\"`Home / Datos /`\"\n    ></Title>\n    <v-card class=\"pa-15 mb-2\" outlined tile>\n      <v-row>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\">\n          <v-select\n            :items=\"proItems\"\n            dense\n            label=\"Elige un proyecto\"\n            v-model=\"proSel\"\n            @input=\"loadGroups\"\n          ></v-select>\n        </v-col>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\">\n          <v-select\n            ref=\"grpMenu\"\n            :items=\"grpItems\"\n            dense\n            label=\"Elige un grupo\"\n            v-model=\"grpSel\"\n            :disabled=\"grpDis\"\n            @input=\"loadDevices\"\n          ></v-select>\n        </v-col>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\">\n          <v-select\n            :items=\"devItems\"\n            dense\n            label=\"Elige un dispositivo\"\n            v-model=\"devSel\"\n            :disabled=\"devDis\"\n            @input=\"loadSensors\"\n          ></v-select>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\">\n          <v-select\n            :items=\"senItems\"\n            dense\n            label=\"Elige los sensores\"\n            multiple\n            chips\n            v-model=\"senSel\"\n            :disabled=\"devDis\"\n            @input=\"toEnaDates\"\n          >\n          </v-select>\n        </v-col>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\">\n          <v-menu\n            ref=\"menu\"\n            v-model=\"menu\"\n            :close-on-content-click=\"false\"\n            :return-value.sync=\"dateReq\"\n            transition=\"scale-transition\"\n            offset-y\n            min-width=\"auto\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"dateReq\"\n                label=\"Selecciona un rango de fechas\"\n                prepend-icon=\"far fa-calendar alt\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n                :disabled=\"fecDis\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"dateReq\" range no-title scrollable>\n              <v-spacer></v-spacer>\n              <v-btn text color=\"primary\" @click=\"menu = false\"> Cancel </v-btn>\n              <v-btn\n                text\n                color=\"primary\"\n                @click=\"\n                  $refs.menu.save(dateReq);\n                  toEnaBtn();\n                \"\n              >\n                OK\n              </v-btn>\n            </v-date-picker>\n          </v-menu>\n        </v-col>\n        <v-col sm=\"12\" md=\"6\" lg=\"4\" align=\"left\">\n          <v-btn\n            class=\"ma-2 text-capitalize font-weight-light\"\n            color=\"primary\"\n            dark\n            width=\"30%\"\n            :disabled=\"btnDis\"\n            @click=\"loadData\"\n          >\n            Consultar\n          </v-btn>\n          <v-icon\n            class=\"ml-2\"\n            color=\"red\"\n            size=\"35\"\n            @click=\"loadocPDFData\"\n            title=\"Exportar\"\n            v-if=\"!expDatDis\"\n          >\n            fas fa-file-pdf\n          </v-icon>\n        </v-col>\n      </v-row>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-data-table\n            v-model=\"selected\"\n            :headers=\"headers\"\n            :items=\"datItems\"\n            item-key=\"id\"\n            show-select\n            v-if=\"showTable\"\n            :loading=\"loadDat\"\n            loading-text=\"Cargando... Espere por favor\"\n            @click=\"toEnaBtn\"\n          >\n          </v-data-table>\n        </v-col>\n      </v-row>\n      <v-row> </v-row>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport Title from '@/components/Title';\nimport { mapState } from 'vuex';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nexport default {\n  data() {\n    return {\n      proItems: [],\n      grpItems: [],\n      devItems: [],\n      senItems: [],\n      datItems: [],\n      dateReq: [],\n\n      menu: false,\n\n      proSel: '',\n      grpSel: '',\n      devSel: '',\n      senSel: '',\n\n      grpDis: true,\n      devDis: true,\n      senDis: true,\n      fecDis: true,\n      btnDis: true,\n      datDis: true,\n      expDatDis: true,\n\n      showTable: false,\n      headers: [],\n      selected: [],\n      docPDF: [],\n      loadDat: false,\n    };\n  },\n  computed: {\n    ...mapState(['users', 'projects', 'groups', 'devices']),\n  },\n\n  components: {\n    Title,\n  },\n\n  methods: {\n    buildHeaders() {\n      const sensors = this.devices.deviceSelected.sensors;\n      this.headers = [];\n      if (sensors && sensors.length > 0) {\n        this.headers.push({ text: 'Id', value: 'id', sortable: true });\n        this.headers.push({ text: 'Fecha', value: 'fecha', sortable: true });\n        sensors.forEach((s) => {\n          if (this.senSel.indexOf(s._id) > -1) {\n            const sname = s.name + ' (' + s.symbol + ')';\n            this.headers.push({ text: sname, value: s._id, sortable: true });\n          }\n        });\n        this.showTable = true;\n      }\n      console.log(this.headers);\n    },\n\n    async loadProjects() {\n      try {\n        const token = this.users.user.token;\n        const res = await this.$store.dispatch('projects/getProjects', token);\n        if (res.data.projects) {\n          this.proItems = res.data.projects.map((p) => {\n            return { text: p.name, value: p._id };\n          });\n        }\n        //console.log('RESPUESTA: ', res);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadProjects: ' + err.message);\n      }\n    },\n\n    loadGroups() {\n      this.grpDis = false;\n      this.devDis = true;\n      this.senDis = true;\n      this.fecDis = true;\n      this.datDis = true;\n      this.btnDis = true;\n      this.expDatDis = true;\n\n      this.grpItems = [];\n      this.devItems = [];\n      this.dateReq = [];\n\n      //console.log('Project id selected: ', this.proSel);\n      this.projects.projectList.forEach((p) => {\n        if (p._id === this.proSel) {\n          this.grpItems = p.groups.map((g) => {\n            return { text: g.name, value: g._id };\n          });\n        }\n      });\n    },\n\n    async loadDevices() {\n      this.devDis = false;\n      this.senDis = true;\n      this.btnDis = true;\n      this.fecDis = true;\n      this.datDis = true;\n      this.expDatDis = true;\n\n      this.senItems = [];\n      this.dateReq = [];\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.proSel);\n        params.push(this.grpSel);\n        const res = await this.$store.dispatch(\n          'devices/getDevicesGroup',\n          params\n        );\n\n        //console.log('DEVICES: ', res, 'params: ', params);\n        if (res.data.devices) {\n          this.devItems = res.data.devices.map((d) => {\n            return { text: d.name, value: d._id };\n          });\n        }\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n\n    toEnaDates() {\n      this.fecDis = false;\n      console.log('Enabling dates!!!!');\n    },\n\n    toEnaBtn() {\n      console.log('Enabling button!!!!');\n      this.btnDis = false;\n    },\n\n    async loadSensors() {\n      this.senSel = '';\n      this.dateReq = [];\n\n      this.senDis = false;\n      this.fecDis = true;\n      this.datDis = true;\n      this.btnDis = true;\n      this.expDatDis = true;\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.proSel);\n        params.push(this.grpSel);\n        params.push(this.devSel);\n        const res = await this.$store.dispatch('devices/getDevice', params);\n        if (res.data.device.sensors) {\n          this.senItems = res.data.device.sensors.map((s) => {\n            return { text: s.name, value: s._id };\n          });\n        }\n        //console.log('DEVICE: ', res, 'items: ', this.senItems);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n\n    async loadData() {\n      this.btnDis = false;\n      this.loadDat = true;\n      this.expDatDis = false;\n      this.buildHeaders();\n\n      // TODO change token handling\n      let params = ['xytVxvDJSD7Qqse1VOKdd'];\n      //params.push('xytVxvDJSD7Qqse1VOKdd');\n      params.push(this.devSel);\n      params.push(this.senSel.join(','));\n      params.push(this.dateReq[0]);\n      params.push(this.dateReq[1]);\n\n      try {\n        const res = await this.$store.dispatch('devices/getData', params);\n\n        if (res.series && res.series.length > 0) {\n          const series = res.series;\n          this.datItems = [];\n          series.forEach((serie) => {\n            const idSen = serie.sensor;\n            const samples = serie.samples;\n            samples.forEach((sample) => {\n              const date = sample.date;\n              const value = sample.value;\n              const index = this.datItems.findIndex(\n                (item) => item.fecha === date\n              );\n              //const senStr = idSen.toString;\n              if (index > -1) {\n                let obj = this.datItems[index];\n                obj[idSen] = value;\n                this.datItems[index] = obj;\n              } else {\n                let idn = this.datItems.length + 1;\n                let obj = { id: idn, fecha: date, [idSen]: value };\n                this.datItems.push(obj);\n              }\n            });\n          });\n        }\n\n        console.log(this.datItems);\n      } catch (err) {\n        console.log(err);\n      }\n      this.loadDat = false;\n    },\n\n    loadocPDFData() {\n      console.log('Llamando a exportar datos');\n      let doc = new jsPDF();\n      let cols = [];\n      let rows = [];\n\n      this.headers.forEach((item) => {\n        cols.push(item.text);\n      });\n\n      this.selected.forEach((d) => {\n        let aray = [];\n        let serie = [];\n        for (let key in d) {\n          serie.push(d[key]);\n        }\n        rows.push(serie);\n      });\n\n      doc.autoTable({\n        head: [cols],\n        body: rows,\n      });\n\n      doc.save('report.pdf');\n    },\n  },\n\n  async created() {\n    const prj = await this.loadProjects();\n    console.log(prj);\n  },\n};\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views"}]}