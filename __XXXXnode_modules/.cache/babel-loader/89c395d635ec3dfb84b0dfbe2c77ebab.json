{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js","mtime":1641992381066},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1641298031863},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js"],"names":["vaxios","state","projectList","projectSelected","totalStats","totalProjecs","totalGroups","totalUsers","totalDevices","totalSensors","callsToAPI","max","min","total","getters","mutations","setProjects","payload","projects","setProject","setTotalStats","actions","getProjects","token","commit","config","headers","Authorization","get","res","data","console","log","getStatsProject","params","idProject","stats","getTotalStats","dispatch","totalGrp","totalDev","totalSen","maxCalls","minCalls","totCalls","length","Promise","all","map","project","idPro","_id","getProject","Project","namespaced"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACnBC,IAAAA,WAAW,EAAE,EADM;AAEnBC,IAAAA,eAAe,EAAE,EAFE;AAGnBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,YAAY,EAAC,CADH;AAEVC,MAAAA,WAAW,EAAE,CAFH;AAGVC,MAAAA,UAAU,EAAE,CAHF;AAIVC,MAAAA,YAAY,EAAE,CAJJ;AAKVC,MAAAA,YAAY,EAAE,CALJ;AAMVC,MAAAA,UAAU,EAAE;AACVC,QAAAA,GAAG,EAAE,CADK;AAEVC,QAAAA,GAAG,EAAE,CAFK;AAGVC,QAAAA,KAAK,EAAE;AAHG;AANF;AAHO,GAAP;AAAA,CAAd;;AAiBA,IAAMC,OAAO,GAAG,EAAhB;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WADgB,uBACJf,KADI,EACGgB,OADH,EACY;AAC1BhB,IAAAA,KAAK,CAACC,WAAN,GAAoBe,OAAO,CAACC,QAA5B;AACD,GAHe;AAKhBC,EAAAA,UALgB,sBAKLlB,KALK,EAKEgB,OALF,EAKW;AACzBhB,IAAAA,KAAK,CAACE,eAAN,GAAwBc,OAAxB;AACD,GAPe;AAShBG,EAAAA,aATgB,yBASFnB,KATE,EASKgB,OATL,EASc;AAC5BhB,IAAAA,KAAK,CAACG,UAAN,GAAmBa,OAAnB;AACD;AAXe,CAAlB;AAaA,IAAMI,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACgBC,KADhB,EACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAC7BC,cAAAA,MAD6B,GACpB;AACbC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYJ,KAAZ;AADN;AADI,eADoB;AAAA;AAAA;AAAA,qBAOfvB,MAAM,CAAC4B,GAAP,CAAW,WAAX,EAAwBH,MAAxB,CAPe;;AAAA;AAO3BI,cAAAA,GAP2B;AAQjC;AACAL,cAAAA,MAAM,CAAC,aAAD,EAAgBK,GAAG,CAACC,IAApB,CAAN;AATiC;AAAA;;AAAA;AAAA;AAAA;AAWjCC,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAXiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAapC,GAda;AAgBRC,EAAAA,eAhBQ,kCAgBoBC,MAhBpB,EAgB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBV,cAAAA,MAAkB,SAAlBA,MAAkB;AAClCD,cAAAA,KADkC,GAC1BW,MAAM,CAAC,CAAD,CADoB;AAElCC,cAAAA,SAFkC,GAEtBD,MAAM,CAAC,CAAD,CAFgB;AAGlCT,cAAAA,MAHkC,GAGzB;AACbC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYJ,KAAZ;AADN;AADI,eAHyB;AAAA;AAAA;AAAA,qBASlBvB,MAAM,CAAC4B,GAAP,0BAA6BO,SAA7B,GAA0CV,MAA1C,CATkB;;AAAA;AAShCW,cAAAA,KATgC;AAAA,gDAW/BA,KAX+B;;AAAA;AAAA;AAAA;AAatCL,cAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AAbsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAezC,GA/Ba;AAiCRK,EAAAA,aAjCQ,gCAiCmCd,KAjCnC,EAiC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlCe,cAAAA,QAAkC,SAAlCA,QAAkC,EAAxBd,MAAwB,SAAxBA,MAAwB,EAAhBvB,KAAgB,SAAhBA,KAAgB;AAClDsC,cAAAA,QADkD,GACvC,CADuC;AAElDhC,cAAAA,UAFkD,GAErC,CAFqC;AAGlDiC,cAAAA,QAHkD,GAGvC,CAHuC;AAIlDC,cAAAA,QAJkD,GAIvC,CAJuC;AAKlDC,cAAAA,QALkD,GAKvC,CALuC;AAMlDC,cAAAA,QANkD,GAMvC,CANuC;AAOlDC,cAAAA,QAPkD,GAOvC,CAPuC;;AAAA,oBASlD3C,KAAK,CAACC,WAAN,CAAkB2C,MAAlB,GAA2B,CATuB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAU9CC,OAAO,CAACC,GAAR,CACJ9C,KAAK,CAACC,WAAN,CAAkB8C,GAAlB;AAAA,oFAAsB,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,0BAAAA,KADc,GACND,OAAO,CAACE,GADF;AAAA;AAAA,iCAEFb,QAAQ,CAAC,iBAAD,EAAoB,CAACf,KAAD,EAAQ2B,KAAR,CAApB,CAFN;;AAAA;AAEdrB,0BAAAA,GAFc;AAGpB;AACAU,0BAAAA,QAAQ,IAAIV,GAAG,CAACvB,WAAhB;AACAC,0BAAAA,UAAU,IAAIsB,GAAG,CAACtB,UAAlB;AACAiC,0BAAAA,QAAQ,IAAIX,GAAG,CAACrB,YAAhB;AACAiC,0BAAAA,QAAQ,IAAIZ,GAAG,CAACpB,YAAhB;AACAiC,0BAAAA,QAAQ,IAAIb,GAAG,CAACnB,UAAJ,CAAeC,GAA3B;AACAgC,0BAAAA,QAAQ,IAAId,GAAG,CAACnB,UAAJ,CAAeE,GAA3B;AACAgC,0BAAAA,QAAQ,IAAIf,GAAG,CAACnB,UAAJ,CAAeG,KAA3B;;AAVoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtB;;AAAA;AAAA;AAAA;AAAA,kBADI,CAV8C;;AAAA;AA0BhDuB,cAAAA,KA1BgD,GA0BxC;AACZ/B,gBAAAA,YAAY,EAAEJ,KAAK,CAACC,WAAN,CAAkB2C,MADpB;AAEZvC,gBAAAA,WAAW,EAAEiC,QAFD;AAGZhC,gBAAAA,UAAU,EAAEA,UAHA;AAIZC,gBAAAA,YAAY,EAAEgC,QAJF;AAKZ/B,gBAAAA,YAAY,EAAEgC,QALF;AAMZ/B,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,GAAG,EAAE+B,QADK;AAEV9B,kBAAAA,GAAG,EAAE+B,QAFK;AAGV9B,kBAAAA,KAAK,EAAE+B;AAHG;AANA,eA1BwC;AAuCtDpB,cAAAA,MAAM,CAAC,eAAD,EAAkBY,KAAlB,CAAN;;AAvCsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCvD,GAzEa;AA2ERgB,EAAAA,UA3EQ,6BA2EejB,SA3Ef,EA2E0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBX,cAAAA,MAAqB,SAArBA,MAAqB;AAChCC,cAAAA,MADgC,GACvB;AACbC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYJ,KAAZ;AADN;AADI,eADuB;AAAA;AAAA;AAAA,qBAOdvB,MAAM,CAAC4B,GAAP,qBAAwBO,SAAxB,EAPc;;AAAA;AAO9Bc,cAAAA,OAP8B;AAQpClB,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAcqB,OAA1B;AARoC;AAAA;;AAAA;AAAA;AAAA;AAUpCtB,cAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAVoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYvC;AAvFa,CAAhB;AA0FA,eAAe;AAAEsB,EAAAA,UAAU,EAAE,IAAd;AAAoBrD,EAAAA,KAAK,EAALA,KAApB;AAA2Ba,EAAAA,OAAO,EAAPA,OAA3B;AAAoCC,EAAAA,SAAS,EAATA,SAApC;AAA+CM,EAAAA,OAAO,EAAPA;AAA/C,CAAf","sourcesContent":["import vaxios from '@/plugins/vaxios';\n\nconst state = () => ({\n  projectList: [],\n  projectSelected: '',\n  totalStats: {\n    totalProjecs:0,\n    totalGroups: 0,\n    totalUsers: 0,\n    totalDevices: 0,\n    totalSensors: 0,\n    callsToAPI: {\n      max: 0,\n      min: 0,\n      total: 0,\n    },\n  },\n});\n\nconst getters = {};\nconst mutations = {\n  setProjects(state, payload) {\n    state.projectList = payload.projects;\n  },\n\n  setProject(state, payload) {\n    state.projectSelected = payload;\n  },\n\n  setTotalStats(state, payload) {\n    state.totalStats = payload;\n  },\n};\nconst actions = {\n  async getProjects({ commit }, token) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const res = await vaxios.get('/projects', config);\n      //console.log(res.data);\n      commit('setProjects', res.data);\n    } catch (err) {\n      console.log('[ERROR] projects:getProjects: ', err);\n    }\n  },\n\n  async getStatsProject({ commit }, params) {\n    const token = params[0];\n    const idProject = params[1];\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const stats = await vaxios.get(`/stats/project/${idProject}`, config);\n      //console.log('Mis stats: ', stats);\n      return stats;\n    } catch (err) {\n      console.log('[ERROR] projects:getStatsProject: ', err);\n    }\n  },\n\n  async getTotalStats({ dispatch, commit, state }, token) {\n    let totalGrp = 0;\n    let totalUsers = 0;\n    let totalDev = 0;\n    let totalSen = 0;\n    let maxCalls = 0;\n    let minCalls = 0;\n    let totCalls = 0;\n\n    if (state.projectList.length > 0) {\n      await Promise.all(\n        state.projectList.map(async (project) => {\n          const idPro = project._id;\n          const res = await dispatch('getStatsProject', [token, idPro]);\n          //console.log(res);\n          totalGrp += res.totalGroups;\n          totalUsers += res.totalUsers;\n          totalDev += res.totalDevices;\n          totalSen += res.totalSensors;\n          maxCalls += res.callsToAPI.max;\n          minCalls += res.callsToAPI.min;\n          totCalls += res.callsToAPI.total;\n        })\n      );\n    }\n\n    const stats = {\n      totalProjecs: state.projectList.length,\n      totalGroups: totalGrp,\n      totalUsers: totalUsers,\n      totalDevices: totalDev,\n      totalSensors: totalSen,\n      callsToAPI: {\n        max: maxCalls,\n        min: minCalls,\n        total: totCalls,\n      },\n    };\n\n    commit('setTotalStats', stats);\n  },\n\n  async getProject({ commit }, idProject) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const project = await vaxios.get(`/projects/${idProject}`);\n      console.log('Project: ' - Project);\n    } catch (err) {\n      console.log('[ERROR] projects:getProjects: ', err);\n    }\n  },\n};\n\nexport default { namespaced: true, state, getters, mutations, actions };\n"]}]}