{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/views/Dashboard.vue","mtime":1651323353810},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1641298031863},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mt-2\">\n    <Loading :loading=\"cargando\"></Loading>\n    <Title\n      :title=\"'Dashboard'\"\n      :color=\"'secondary--text'\"\n      :path=\"'Home / dashboard'\"\n    ></Title>\n\n    <v-row>\n      <v-col cols=\"12\" md=\"4\" sm=\"6\">\n        <v-card class=\"pa-4 text-center\" outlined tile>\n          <apexchart\n            type=\"area\"\n            :options=\"options\"\n            :series=\"series\"\n          ></apexchart>\n        </v-card>\n      </v-col>\n      <v-col cols=\"12\" md=\"4\" sm=\"6\">\n        <v-card class=\"pa-4 text-center\" outlined tile>\n          <apexchart\n            type=\"line\"\n            :options=\"options\"\n            :series=\"series\"\n          ></apexchart>\n        </v-card>\n      </v-col>\n      <v-col cols=\"12\" md=\"4\" sm=\"6\">\n        <v-card class=\"pa-4 text-center\" outlined tile>\n          <apexchart\n            type=\"bar\"\n            :options=\"optionsA\"\n            :series=\"seriesA\"\n          ></apexchart>\n        </v-card>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        md=\"4\"\n        sm=\"6\"\n        v-for=\"chart in charts.chartList\"\n        :key=\"chart.id\"\n      >\n        <v-card class=\"pa-4 text-center\" outlined tile>\n          <apexchart\n            :type=\"chart.type\"\n            :options=\"chart.options\"\n            :series=\"chart.series\"\n          ></apexchart>\n          <v-card-text>\n            <v-icon\n              class=\"mr-2\"\n              color=\"warning\"\n              @click=\"editChart(chart)\"\n              title=\"Editar\"\n              size=\"20\"\n            >\n              fas fa-pencil-alt\n            </v-icon>\n            <v-icon\n              color=\"error\"\n              @click=\"deleteChart(chart)\"\n              title=\"Eliminar\"\n              size=\"20\"\n            >\n              fas fa-trash\n            </v-icon>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-row class=\"flex-row-reverse\">\n      <v-dialog\n        v-model=\"dialog\"\n        persistent\n        max-width=\"1500px\"\n        max-height=\"1500px\"\n      >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            color=\"primary\"\n            dark\n            elevation=\"8\"\n            fab\n            class=\"mt-15 mr-5\"\n            v-bind=\"attrs\"\n            v-on=\"on\"\n          >\n            <v-icon>fas fa-plus</v-icon>\n          </v-btn>\n        </template>\n        <v-form v-model=\"isFormValid\">\n          <v-card class=\"pa-5\">\n            <v-card-title>\n              <span class=\"text-h5\">Nuevo gráfico</span>\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row class=\"pa-2\">\n                  <v-col cols=\"12\" sm=\"4\">\n                    <v-radio-group v-model=\"editedChart.type\" mandatory>\n                      <v-radio label=\"Line\" value=\"line\"></v-radio>\n                      <v-icon color=\"primary\" size=\"80\" class=\"mb-2\"\n                        >mdi-chart-line</v-icon\n                      >\n                      <v-radio label=\"Bar\" value=\"bar\"></v-radio>\n                      <v-icon color=\"success\" size=\"80\" class=\"mb-2\"\n                        >mdi-chart-bar</v-icon\n                      >\n                      <v-radio label=\"Pie\" value=\"pie\"></v-radio>\n                      <v-icon color=\"warning\" size=\"80\" class=\"mb-2\"\n                        >mdi-chart-pie</v-icon\n                      >\n                      <v-radio label=\"Area\" value=\"area\"></v-radio>\n                      <v-icon color=\"purple\" size=\"80\" class=\"mb-2\"\n                        >mdi-chart-areaspline</v-icon\n                      >\n                    </v-radio-group>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"4\" class=\"justify-conten\">\n                    <span class=\"text-h6 font-weight-light\"\n                      >Periodo de las series</span\n                    >\n                    <v-radio-group v-model=\"editedChart.period\" mandatory>\n                      <v-radio label=\"1h\" value=\"0\"></v-radio>\n                      <v-radio label=\"24h\" value=\"1\"></v-radio>\n                      <v-radio label=\"Última semana\" value=\"2\"></v-radio>\n                      <v-radio label=\"Entre fechas\" value=\"3\"></v-radio>\n                    </v-radio-group>\n                    <v-menu\n                      ref=\"menu\"\n                      v-model=\"menu\"\n                      :close-on-content-click=\"false\"\n                      :return-value.sync=\"editedChart.dateReq\"\n                      transition=\"scale-transition\"\n                      offset-y\n                      min-width=\"auto\"\n                    >\n                      <template v-slot:activator=\"{ on, attrs }\">\n                        <v-text-field\n                          v-model=\"editedChart.dateReq\"\n                          label=\"Rango de fechas\"\n                          prepend-icon=\"far fa-calendar alt\"\n                          readonly\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                          :disabled=\"editedChart.period !== '3'\"\n                          class=\"mb-5 pr-10\"\n                        ></v-text-field>\n                      </template>\n                      <v-date-picker\n                        v-model=\"editedChart.dateReq\"\n                        range\n                        no-title\n                        scrollable\n                      >\n                        <v-spacer></v-spacer>\n                        <v-btn text color=\"primary\" @click=\"menu = false\">\n                          Cancel\n                        </v-btn>\n                        <v-btn\n                          text\n                          color=\"primary\"\n                          @click=\"\n                            $refs.menu.save(editedChart.dateReq);\n                            toEnaBtn();\n                          \"\n                        >\n                          OK\n                        </v-btn>\n                      </v-date-picker>\n                    </v-menu>\n                    <span class=\"text-h6 font-weight-light\"\n                      >Series del gráfico\n                    </span>\n                    <span class=\"ml-2\">\n                      <small v-if=\"seriesChart.length === 0\"\n                        >No hay series</small\n                      >\n                    </span>\n                    <v-btn\n                      small\n                      color=\"primary\"\n                      dark\n                      elevation=\"8\"\n                      fab\n                      class=\"ml-5\"\n                      @click=\"menuCharts = true\"\n                      v-if=\"!menuCharts\"\n                      :disabled=\"seriesChart.length === 3\"\n                    >\n                      <v-icon small>fas fa-plus</v-icon>\n                    </v-btn>\n                    <small\n                      class=\"ml-2\"\n                      v-if=\"!menuCharts && seriesChart.length !== 3\"\n                      >Añade una serie (Máximo 3)</small\n                    >\n\n                    <v-list shaped class=\"mt-5\">\n                      <v-list-item-group color=\"primary\">\n                        <v-list-item\n                          v-for=\"(serie, id) in seriesChart\"\n                          :key=\"id\"\n                          :color=\"serie.color\"\n                        >\n                          <v-icon :color=\"serie.color\" class=\"mr-5\" size=\"25\"\n                            >mdi-chart-timeline-variant</v-icon\n                          >\n                          <v-list-item-content>\n                            <v-list-item-title\n                              v-text=\"serie.name\"\n                            ></v-list-item-title>\n                          </v-list-item-content>\n                          <v-list-item-icon>\n                            <v-btn small fab @click=\"loadSerie(serie)\">\n                              <v-icon color=\"success\">mdi-pencil-circle</v-icon>\n                            </v-btn>\n                            <v-btn\n                              small\n                              fab\n                              @click=\"deleteSerie(serie)\"\n                              class=\"ml-2\"\n                            >\n                              <v-icon color=\"red\"\n                                >mdi-delete-circle-outline</v-icon\n                              >\n                            </v-btn>\n                          </v-list-item-icon>\n                        </v-list-item>\n                      </v-list-item-group>\n                    </v-list>\n                  </v-col>\n\n                  <v-col cols=\"12\" sm=\"4\" class=\"justify-content\">\n                    <div v-if=\"menuCharts\">\n                      <v-select\n                        :items=\"proItems\"\n                        dense\n                        label=\"Elige un proyecto\"\n                        v-model=\"editedSerie.elements.project\"\n                        @input=\"loadGroups\"\n                        class=\"mt-5\"\n                      ></v-select>\n                      <v-select\n                        ref=\"grpMenu\"\n                        :items=\"grpItems\"\n                        dense\n                        label=\"Elige un grupo\"\n                        v-model=\"editedSerie.elements.group\"\n                        :disabled=\"grpDis\"\n                        @input=\"loadDevices\"\n                        class=\"mt-5\"\n                      ></v-select>\n                      <v-select\n                        :items=\"devItems\"\n                        dense\n                        label=\"Elige un dispositivo\"\n                        v-model=\"editedSerie.elements.device\"\n                        :disabled=\"devDis\"\n                        @input=\"loadSensors\"\n                        class=\"mt-5\"\n                      ></v-select>\n                      <v-select\n                        :items=\"senItems\"\n                        dense\n                        label=\"Elige los sensores\"\n                        chips\n                        v-model=\"editedSerie.elements.sensor\"\n                        :disabled=\"devDis\"\n                        class=\"mt-5\"\n                      >\n                      </v-select>\n                      <v-text-field\n                        label=\"Nombre de la serie\"\n                        v-model=\"editedSerie.name\"\n                        :rules=\"rules.name\"\n                        :disabled=\"editedSerie.elements.sensor === ''\"\n                        required\n                      ></v-text-field>\n                      <span\n                        v-if=\"editedSerie.name !== ''\"\n                        class=\"mt-10 text-h7 font-weight-light\"\n                        >Color de la serie\n                      </span>\n                      <v-color-picker\n                        v-if=\"editedSerie.name !== ''\"\n                        v-model=\"editedSerie.color\"\n                        class=\"ma-2\"\n                        hide-canvas\n                      ></v-color-picker>\n                      <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn\n                          icon\n                          color=\"success\"\n                          @click=\"addSerie()\"\n                          :disabled=\"editedSerie.elements.sensor === ''\"\n                          v-if=\"!editSerieMode\"\n                        >\n                          <v-icon>mdi-plus-thick</v-icon>\n                        </v-btn>\n                        <v-btn\n                          icon\n                          color=\"success\"\n                          @click=\"updateSerie()\"\n                          :disabled=\"editedSerie.elements.sensor === ''\"\n                          v-if=\"editSerieMode\"\n                        >\n                          <v-icon>mdi-check</v-icon>\n                        </v-btn>\n                        <v-btn icon color=\"red\" @click=\"closeMenuSeries\">\n                          <v-icon>mdi-export</v-icon>\n                        </v-btn>\n                      </v-card-actions>\n                    </div>\n                  </v-col>\n                  <v-col cols=\"12\" v-if=\"menuCharts\"> </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\"> Close </v-btn>\n              <v-btn\n                color=\"blue darken-1\"\n                text\n                @click=\"save()\"\n                :disabled=\"!isFormValid\"\n              >\n                Save\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-form>\n      </v-dialog>\n      <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n        <v-card>\n          <v-card-title class=\"text-h5\"\n            >¿Estás seguro de eliminar este elemento?</v-card-title\n          >\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n              >Cancel</v-btn\n            >\n            <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n              >OK</v-btn\n            >\n            <v-spacer></v-spacer>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-row>\n  </div>\n</template>\n<script>\nimport Title from '@/components/Title';\nimport utils from '@/plugins/utils';\nimport Loading from '@/components/Loading';\nimport VueApexCharts from 'vue-apexcharts';\nimport ApexCharts from 'apexcharts';\nimport { mapState, mapActions } from 'vuex';\nimport moment from 'moment';\n\nexport default {\n  name: 'Dashboard',\n  mounted: function () {\n    window.setInterval(() => {\n      this.reloadCharts();\n      //this.timeSeries();\n    }, 60000);\n  },\n\n  data() {\n    return {\n      // Form data\n      dialog: false,\n      dialogDelete: false,\n      menuCharts: false,\n      cargando: false,\n      editMode: false,\n      editSerieMode: false,\n\n      // Charts data\n      editedIndex: -1,\n      editedChart: {\n        id: '',\n        type: '',\n        period: '0',\n        dateReq: [],\n        options: '',\n        series: '',\n      },\n      defaultChart: {\n        id: '',\n        type: '',\n        period: '0',\n        dateReq: [],\n        options: '',\n        series: '',\n      },\n      seriesChart: [],\n      editedSerie: {\n        id: '',\n        name: '',\n        color: '',\n        data: [],\n        elements: {\n          project: '',\n          group: '',\n          device: '',\n          sensor: '',\n        },\n      },\n      defaultSerie: {\n        id: '',\n        name: '',\n        color: '',\n        data: [],\n        elements: {\n          project: '',\n          group: '',\n          device: '',\n          sensor: '',\n        },\n      },\n\n      // Rules from\n      rules: {\n        name: [\n          (v) => !!v || 'El campo es requerido',\n          (v) =>\n            (v && v.length >= 3 && v.length <= 40) ||\n            'La nombre debe tener entre 3 y 40 caracteres',\n        ],\n      },\n      isFormValid: false,\n      proItems: [],\n      grpItems: [],\n      devItems: [],\n      senItems: [],\n      datItems: [],\n\n      menu: false,\n      grpDis: true,\n      devDis: true,\n      senDis: true,\n      btnDis: true,\n\n      options: {\n        chart: {\n          id: 'vuechart-example',\n        },\n        stroke: {\n          curve: 'smooth',\n        },\n        xaxis: {\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\n        },\n        markers: {\n          size: 0,\n        },\n      },\n      series: [\n        {\n          name: 'series-1',\n          color: '#FF00FF',\n          data: [30, 40, 45, 50, 49, 60, 70, 91],\n        },\n        {\n          name: 'series-2',\n          data: [10, 20, 25, 65, 21, 30, 55, 60],\n        },\n      ],\n\n      optionsA: {\n        chart: {\n          id: 'vuechart-example00',\n        },\n        stroke: {\n          curve: 'smooth',\n        },\n        markers: {\n          size: 2,\n        },\n      },\n      seriesA: [\n        {\n          name: 'series-1',\n          data: [\n            { x: '2020-12-01T08:16:53.532Z', y: 54 },\n            { x: '2020-12-01T15:52:44.674Z', y: 17 },\n            { x: '2020-12-01T19:53:40.747Z', y: 13 },\n            { x: '2020-12-01T20:53:40.747Z', y: 17 },\n            { x: '2020-12-01T21:53:40.747Z', y: 30 },\n            { x: '2020-12-01T22:53:40.747Z', y: 26 },\n          ],\n        },\n        {\n          name: 'series-1',\n          data: [\n            { x: '2020-12-01T08:16:53.532Z', y: 54 },\n            { x: '2020-12-01T15:52:44.674Z', y: 17 },\n            { x: '2020-12-01T19:53:40.747Z', y: 13 },\n            { x: '2020-12-01T19:54:40.747Z', y: 13 },\n            { x: '2020-12-01T19:55:40.747Z', y: 13 },\n            { x: '2020-12-01T20:56:40.747Z', y: 17 },\n          ],\n        },\n      ],\n    };\n  },\n  components: {\n    Title,\n    Loading,\n  },\n  computed: {\n    ...mapState(['projects', 'users', 'devices', 'charts']),\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  methods: {\n    async timeSeries() {\n      this.seriesA.forEach((serie) => {\n        console.log('Lanzado!');\n        serie.data.push({ x: new Date().toISOString(), y: 26 });\n      });\n\n      ApexCharts.exec('vuechart-example00', 'updateSeries', [\n        { data: this.seriesA[0].data },\n        { data: this.seriesA[1].data },\n      ]);\n    },\n\n    async reloadCharts() {\n      const charts = this.charts.chartList.filter((chart) => {\n        return chart.period !== 3;\n      });\n\n      await Promise.all(\n        charts.map(async (chart) => {\n          console.log('Calling Charts [CHART]');\n          chart.series.map(async (serie) => {\n            serie.data = [];\n            console.log('Calling Charts [SERIE]');\n\n            // TODO get APITOKEN from device\n            let params = ['xytVxvDJSD7Qqse1VOKdd'];\n            params.push(serie.elements.device);\n            params.push(serie.elements.sensor);\n            params.push(chart.dateReq[0]);\n            params.push(chart.dateReq[1]);\n\n            const dta = await this.getData(params);\n            //console.log('RESSSSS -> ', dta);\n\n            if (dta.series.length > 0) {\n              //console.log('EO: ', dta.series);\n              // Only check first serie\n              const ds = dta.series[0];\n              ds.samples.forEach((s) => {\n                serie.data.push({\n                  x: utils.formatDate(new Date(s.date)),\n                  y: s.value,\n                });\n              });\n            }\n            //chart.series.push(serie);\n            //console.log('SERIE DATA: ', serie.data);\n            ApexCharts.exec(serie.id, 'updateSeries', [{ data: serie.data }]);\n          });\n        })\n      );\n    },\n\n    addSerie() {\n      this.editedSerie.id = 'id' + Math.random().toString(16).slice(2);\n      this.editedSerie.data = [];\n      this.seriesChart.push(this.editedSerie);\n      //console.log('Llamando a addSerie: ', this.seriesChart);\n      this.closeMenuSeries();\n    },\n\n    updateSerie() {\n      console.log('[UpdateSerie]', this.editedSerie);\n\n      this.seriesChart = this.seriesChart.map((serie) => {\n        if (serie.id === this.editedSerie.id) {\n          console.log('Localizado');\n          serie.name = this.editedSerie.name;\n          serie.color = this.editedSerie.color;\n          serie.elements = this.editedSerie.elements;\n        }\n        return serie;\n      });\n      console.log(\n        'Esta es la serie actualizada: ',\n        this.seriesChart,\n        ', editedSerie: ',\n        this.editedSerie\n      );\n      this.closeMenuSeries();\n    },\n\n    async loadSerie(serie) {\n      //TODO\n\n      this.editedSerie.id = serie.id;\n      console.log('editedSerie: ', this.editedSerie);\n      const rsp = await this.loadProjects();\n      this.editedSerie.elements.project = serie.elements.project;\n\n      this.grpDis = false;\n      const rsg = await this.loadGroups();\n      this.editedSerie.elements.group = serie.elements.group;\n\n      this.devDis = false;\n      const rsd = await this.loadDevices();\n      this.editedSerie.elements.device = serie.elements.device;\n\n      this.senDis = false;\n      const rss = await this.loadSensors();\n      this.editedSerie.elements.sensor = serie.elements.sensor;\n\n      this.editedSerie.name = serie.name;\n      this.editedSerie.color = serie.color;\n      this.menuCharts = true;\n      this.editSerieMode = true;\n\n      //this.closeMenuSeries();\n    },\n\n    deleteSerie(serie) {\n      this.seriesChart = this.seriesChart.filter((s) => {\n        return serie.id !== s.id;\n      });\n\n      this.closeMenuSeries();\n    },\n\n    closeMenuSeries() {\n      this.menuCharts = false;\n      this.editSerieMode = false;\n      this.editedSerie = Object.assign({}, this.defaultSerie);\n      this.editedSerie.elements = Object.assign({}, this.defaultSerie.elements);\n      console.log(\n        'Llamando a closeMenuSeries: ',\n        this.editedSerie,\n        ', defaultSerie: ',\n        this.defaultSerie\n      );\n    },\n\n    editChart(item) {\n      this.editedIndex = this.charts.chartList.indexOf(item);\n      this.editedChart = Object.assign({}, item);\n      this.seriesChart = item.series;\n      this.editMode = true;\n      this.dialog = true;\n    },\n\n    deleteChart(chart) {\n      this.editedIndex = this.charts.chartList.indexOf(chart);\n      this.editedChart = chart;\n      this.dialogDelete = true;\n    },\n\n    async deleteItemConfirm() {\n      this.cargando = true;\n      const rs = await this.$store.dispatch(\n        'charts/deleteChart',\n        this.editedChart\n      );\n      this.cargando = false;\n      this.dialogDelete = false;\n    },\n\n    close() {\n      this.dialog = false;\n      this.closeMenuSeries();\n      this.seriesChart = [];\n      this.$nextTick(() => {\n        this.editedChart = Object.assign({}, this.defaultChart);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.closeMenuSeries();\n      this.$nextTick(() => {\n        this.editedChart = Object.assign({}, this.defaultChart);\n        this.editedIndex = -1;\n      });\n    },\n\n    async createChart() {\n      // First create a series data\n      let chart = {};\n      chart.id = this.editMode\n        ? this.editedChart.id\n        : 'id' + Math.random().toString(16).slice(2);\n      chart.type = this.editedChart.type;\n      chart.period = this.editedChart.period;\n      chart.options = {\n        chart: {\n          id: chart.id,\n         },\n        // xaxis: {\n        //   type: 'datetime',\n        //   labels: {\n        //     rotate: -15,\n        //     rotateAlways: true,\n        //     // formatter: function(val, timestamp) {\n        //     //       return moment(new Date(timestamp)).format(\"l\")\n        //     // }\n        //   },\n        // },\n        stroke: {\n          curve: 'smooth',\n        },\n        markers: {\n          size: 2,\n        },\n      };\n\n      if (chart.period === '3') {\n        chart.dateReq = this.editedChart.dateReq;\n      } else {\n        chart.dateReq = this.calculateDates(chart.period);\n      }\n\n      chart.series = [];\n      await Promise.all(\n        this.seriesChart.map(async (serie) => {\n          serie.data = [];\n          // TODO get APITOKEN from device\n          let params = ['xytVxvDJSD7Qqse1VOKdd'];\n          params.push(serie.elements.device);\n          params.push(serie.elements.sensor);\n          params.push(chart.dateReq[0]);\n          params.push(chart.dateReq[1]);\n\n          const dta = await this.getData(params);\n          // console.log('RESSSSS -> ', dta);\n          if (dta.series.length > 0) {\n            // console.log('EO: ', dta.series);\n            // Only check first serie\n            const ds = dta.series[0];\n            ds.samples.forEach((s) => {\n              serie.data.push({\n                //x: new Date(s.date).getTime(),\n                x: utils.formatDate(new Date(s.date)),\n                y: s.value,\n              });\n            });\n          }\n          chart.series.push(serie);\n        })\n      );\n\n      //console.log('Chart enviado ', chart);\n      this.$store.dispatch('charts/addChart', chart);\n    },\n\n    calculateDates(period) {\n      let dateFrom = '';\n      let dateTo = '';\n      let dateOffsetDay = 24 * 60 * 60 * 1000;\n\n      if (period === '2') {\n        // From 1 week ago\n        dateOffsetDay *= 7;\n        dateFrom = new Date();\n        dateFrom.setTime(dateFrom.getTime() - dateOffsetDay);\n        dateTo = '';\n      } else if (period === '1') {\n        // Last 24 hours\n        dateFrom = new Date();\n        dateFrom.setTime(dateFrom.getTime() - dateOffsetDay);\n        dateTo = '';\n      } else {\n        // 0 Last 24H by default Nothing to do\n      }\n      //console.log('Las fechas FROM-TO: ', dateFrom, ' ', dateTo);\n      const dates = [dateFrom, dateTo];\n      return dates;\n    },\n\n    /**\n     *  Pass object to query for data\n     *  apiToken  params[0]\n     *  idDevice  params[1]\n     *  idSensor  params[2]\n     *  dateFrom  params[3] Can be null\n     *  dateTo    params[4] Can be null\n     */\n    async getData(params) {\n      try {\n        const res = await this.$store.dispatch('charts/getData', params);\n        console.log('RES DATA: ', res);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - getData', err.message);\n      }\n    },\n\n    async save() {\n      this.cargando = true;\n      this.createChart();\n      this.closeMenuSeries();\n      this.seriesChart = [];\n      this.editedChart = Object.assign({}, this.defaultChart);\n      this.editMode = false;\n      this.cargando = false;\n      this.close();\n    },\n\n    async loadProjects() {\n      try {\n        const token = this.users.user.token;\n        const res = await this.$store.dispatch('projects/getProjects', token);\n        if (res.data.projects) {\n          this.proItems = res.data.projects.map((p) => {\n            return { text: p.name, value: p._id };\n          });\n        }\n        //console.log('RESPUESTA: ', res);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadProjects: ' + err.message);\n      }\n    },\n\n    loadGroups() {\n      this.grpDis = false;\n      this.devDis = true;\n      this.senDis = true;\n      this.btnDis = true;\n      this.grpItems = [];\n      this.devItems = [];\n\n      this.projects.projectList.forEach((p) => {\n        if (p._id === this.editedSerie.elements.project) {\n          this.grpItems = p.groups.map((g) => {\n            return { text: g.name, value: g._id };\n          });\n        }\n      });\n    },\n\n    async loadDevices() {\n      this.devDis = false;\n      this.senDis = true;\n      this.btnDis = true;\n      this.senItems = [];\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.editedSerie.elements.project);\n        params.push(this.editedSerie.elements.group);\n        const res = await this.$store.dispatch(\n          'devices/getDevicesGroup',\n          params\n        );\n\n        //console.log('DEVICES: ', res, 'params: ', params);\n        if (res.data.devices) {\n          this.devItems = res.data.devices.map((d) => {\n            return { text: d.name, value: d._id };\n          });\n        }\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n\n    toEnaBtn() {\n      this.btnDis = false;\n    },\n\n    async loadSensors() {\n      this.editedSerie.elements.sensor = '';\n      this.senDis = false;\n      this.btnDis = true;\n\n      try {\n        let params = [this.users.user.token];\n        params.push(this.editedSerie.elements.project);\n        params.push(this.editedSerie.elements.group);\n        params.push(this.editedSerie.elements.device);\n        const res = await this.$store.dispatch('devices/getDevice', params);\n        if (res.data.device.sensors) {\n          this.senItems = res.data.device.sensors.map((s) => {\n            return { text: s.name, value: s._id };\n          });\n        }\n        //console.log('DEVICE: ', res, 'items: ', this.senItems);\n        return res;\n      } catch (err) {\n        console.log('[ERROR] - loadDevices: ' + err.message);\n      }\n    },\n  },\n\n  async created() {\n    const prj = await this.loadProjects();\n  },\n};\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views"}]}