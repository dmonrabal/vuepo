{"remainingRequest":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js!/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js","dependencies":[{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js","mtime":1642618639930},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/babel.config.js","mtime":1641298031863},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/david/Documentos/Formacion/Udemy/VUE.JS/project/vuepo/src/store/modules/projects.js"],"names":["vaxios","state","projectList","groupsList","projectSelected","totalStats","totalProjecs","totalGroups","totalUsers","totalDevices","totalSensors","callsToAPI","max","min","total","getters","mutations","setProjects","payload","projects","setProject","setTotalStats","actions","getProjects","token","dispatch","commit","config","headers","Authorization","get","res","data","console","log","createProject","params","body","update","project","updateProject","idProject","getProject","selectProject","getStatsProject","stats","getTotalStats","totalGrp","totalDev","totalSen","maxCalls","minCalls","totCalls","length","Promise","all","map","idPro","_id","loadFullGroups","forEach","name","groups","group","groupLoad","push","namespaced"],"mappings":"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","sourcesContent":["import vaxios from '@/plugins/vaxios';\n\nconst state = () => ({\n  projectList: [],\n  groupsList: [],\n  projectSelected: '',\n  totalStats: {\n    totalProjecs: 0,\n    totalGroups: 0,\n    totalUsers: 0,\n    totalDevices: 0,\n    totalSensors: 0,\n    callsToAPI: {\n      max: 0,\n      min: 0,\n      total: 0,\n    },\n  },\n});\n\nconst getters = {};\nconst mutations = {\n  setProjects(state, payload) {\n    state.projectList = payload.projects;\n  },\n\n  setProject(state, payload) {\n    state.projectSelected = payload;\n  },\n\n  setTotalStats(state, payload) {\n    state.totalStats = payload;\n  },\n};\n\nconst actions = {\n  async getProjects({ dispatch, commit }, token) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const res = await vaxios.get('/projects', config);\n      //console.log(res.data);\n      commit('setProjects', res.data);\n      dispatch('loadFullGroups');\n    } catch (err) {\n      console.log('[ERROR] projects:getProjects: ', err);\n    }\n  },\n\n  async createProject({ commit }, params) {\n    const token = params[0];\n    const body = params[1];\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      const res = await vaxios.update('/projects/', body, config);\n      // console.log('Res update project:', res);\n      commit('setProject', res.data.project);\n    } catch (err) {\n      console.log('[ERROR] projects:updateProject: ', err);\n    }\n  },\n\n  async updateProject({ commit }, params) {\n    const token = params[0];\n    const body = params[1];\n    const idProject = params[2];\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      const res = await vaxios.update(`/projects/${idProject}`, body, config);\n      // console.log('Res update project:', res);\n      commit('setProject', res.data.project);\n    } catch (err) {\n      console.log('[ERROR] projects:updateProject: ', err);\n    }\n  },\n\n  async getProject({ commit }, idProject) {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const project = await vaxios.get(`/projects/${idProject}`);\n      // console.log('Project: ' - Project);\n    } catch (err) {\n      console.log('[ERROR] projects:getProjects: ', err);\n    }\n  },\n\n  selectProject({ commit }, project) {\n    commit('setProject', project);\n  },\n\n  async getStatsProject({ commit }, params) {\n    const token = params[0];\n    const idProject = params[1];\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    try {\n      const stats = await vaxios.get(`/stats/project/${idProject}`, config);\n      // console.log('Mis stats: ', stats);\n      return stats;\n    } catch (err) {\n      console.log('[ERROR] projects:getStatsProject: ', err);\n    }\n  },\n\n  async getTotalStats({ dispatch, commit, state }, token) {\n    let totalGrp = 0;\n    let totalUsers = 0;\n    let totalDev = 0;\n    let totalSen = 0;\n    let maxCalls = 0;\n    let minCalls = 0;\n    let totCalls = 0;\n\n    if (state.projectList.length > 0) {\n      await Promise.all(\n        state.projectList.map(async (project) => {\n          const idPro = project._id;\n          const res = await dispatch('getStatsProject', [token, idPro]);\n\n          //console.log(res);\n          totalGrp += res.totalGroups;\n          totalUsers += res.totalUsers;\n          totalDev += res.totalDevices;\n          totalSen += res.totalSensors;\n          maxCalls += res.callsToAPI.max;\n          minCalls += res.callsToAPI.min;\n          totCalls += res.callsToAPI.total;\n\n          project.stats = {\n            totalGroups: res.totalGroups,\n            totalDevices: res.totalDevices,\n            totalSensors: res.totalSensors,\n            totalUsers: res.totalUsers,\n            maxCalls: res.callsToAPI.max,\n            minCalls: res.callsToAPI.min,\n            totCalls: res.callsToAPI.total,\n          };\n        })\n      );\n    }\n\n    const stats = {\n      totalProjecs: state.projectList.length,\n      totalGroups: totalGrp,\n      totalUsers: totalUsers,\n      totalDevices: totalDev,\n      totalSensors: totalSen,\n      callsToAPI: {\n        max: maxCalls,\n        min: minCalls,\n        total: totCalls,\n      },\n    };\n\n    commit('setTotalStats', stats);\n  },\n\n  loadFullGroups({ state }) {\n    state.groupsList\n    state.projectList.forEach((project) => {\n      console.log('Entro en proyecto: ', project.name);\n      project.groups.forEach((group) => {\n        let groupLoad = group;\n        groupLoad.project = project.name;\n        state.groupsList.push(groupLoad);\n      });\n    });\n  },\n};\n\nexport default { namespaced: true, state, getters, mutations, actions };\n"]}]}